/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 31 08:54:51 GMT 2021
 */

package comp5111.assignment.cut;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import comp5111.assignment.cut.ToolBox;
import java.nio.CharBuffer;
import java.util.Locale;
import java.util.function.Supplier;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ToolBox_ESTest extends ToolBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("Il");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("^\n");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("T1l");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("1F");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("Sf");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("$8L");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("$d");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("7E");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("L9e");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("#2");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("w.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("m5E-OOI>9oENc;]cQ*OsA&U2s.4vb,O3DZv^e5");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("~+.R;vI!@_o[5?|,xQ<ShpKOVRJ0p^SYBfC#!b");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("$E$@nKCHhB ctcsch27brh.UZ!F7&'[e.Y<%LJa@Uq$FDv^I)<,P");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("e2EEWXj\"I>");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("?5ey1D=%4hLQsABGO/cZw+Q,J(ih<OxtzF{\tF5F]|1M}`_-KZ)}#(P+;Bx+mBU}Q+JX>(o]mGe%3?JE");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("8..cs`rgbg-ah/g+uegisan6@t0<a");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("\n");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("K05{>~[ylxx2%Wzg9ug5! Gd@jN]D9bf! ]^");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("$03&(O&~6iV=G-oD&+l");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("A0DbyTs63TdoTMk~rLTdFW[Bv6SVJdt-],r");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(">0xCxgwa]&~1z@9g4]t>c3sk}l6k$!f");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(">0x0xgwa]&~1z@9g4]t>c3sk}l6k$!f");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("f0x(=");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("f0x");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(">0XGWa$>]&,1ZO@9G4]T>C3sk}L6K$!F");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("P06");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("+D");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("-Lrni.{4/@hfucykfapxP%SC=vTuxUB:~fKCE$N@|C`");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("T1l");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("-i\thm");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("~\"N7z:W2;,i<gB55RFRq>`{yon2LY5st-yw&oB]aPs(`K?L^MR[^)c9%+Kxw<uK");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("\n");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("W=X");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase((CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllUpperCase("Z");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllUpperCase((CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllLowerCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isNumeric((CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "RAUU|sz-kd.7lJM;5z93j+7RI#,~;~9\">4u|6FSg3ja(WIw^T;t8V;Xc$i{V-;x^>HoKYaw";
      stringArray0[1] = "RAUU|sz-kd.7lJM;5z93j+7RI#,~;~9\">4u|6FSg3ja(WIw^T;t8V;Xc$i{V-;x^>HoKYaw";
      stringArray0[2] = "DHteo[AVa)-F.Bs4[CJ2?a*W(54)I9rsf!Pq/!~gN+$<soad<{o>G`_B%<1Rg?YW7|1s:z%ik62)0]Qkc#{1e@iZm(A-X";
      stringArray0[3] = "&J3dj0U/L/\"Q9pWiYsbo8YSGn=weyh8HvxCN'+9Rc9Y`Why#y'W@J3\tF<+37by9.\"'{1Ilqkkky1v*y+Qrbny,<";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "\r";
      stringArray0[1] = "\r";
      stringArray0[2] = "\r";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("\r", string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[1] = "";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "\r", (CharSequence) "\n");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) " ", (CharSequence) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) null, (CharSequence) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(104);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      char[] charArray0 = new char[1];
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "\r", charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) null, (char[]) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      char[] charArray0 = new char[16];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.StringTools.indexOfAny(charBuffer0, charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.allocate(94);
      int int0 = ToolBox.StringTools.indexOfAny(charBuffer0, charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.StringTools.indexOfAny(charBuffer0, charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'p';
      int int0 = ToolBox.StringTools.indexOfAny("\"DNn[zUwig[-7]gez83~gAP?7hSK8q2R;z*Zw^#pkURS*\"(~2y.6ML; tZ&&KTM8Bbx0m+/~1<}2", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      char[] charArray0 = new char[0];
      int int0 = ToolBox.StringTools.indexOfAny("\n", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      char[] charArray0 = new char[0];
      int int0 = ToolBox.StringTools.indexOfAny("", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Supplier<CharSequence> supplier0 = (Supplier<CharSequence>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn("").when(supplier0).get();
      CharSequence charSequence0 = ToolBox.StringTools.getIfEmpty((CharSequence) "", supplier0);
      assertEquals("", charSequence0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      CharSequence charSequence0 = ToolBox.StringTools.getIfEmpty((CharSequence) charBuffer0, (Supplier<CharSequence>) null);
      assertNull(charSequence0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(15);
      CharSequence charSequence0 = ToolBox.StringTools.getIfEmpty((CharSequence) charBuffer0, (Supplier<CharSequence>) null);
      assertEquals(15, charSequence0.length());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "H@=4$f:3tj;C~JwOD{{='fDo1,BpoAu8/hOtA>uM(mdT=van36*B0P7SA}!<j'DBqqL{";
      stringArray0[1] = "(3\"MtT2dsDz*A\"&U(:azPxCyI=R/TLzccAD\"[Z3s!(*B`u9@d";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("H@=4$f:3tj;C~JwOD{{='fDo1,BpoAu8/hOtA>uM(mdT=van3", string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\r");
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "\n", (CharSequence) charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "\n", (CharSequence) "\n");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "", (CharSequence) charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "\n", (CharSequence) charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "8.ChSP`RGbG-TH/j+UJEGISAN6@T0<A");
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) charBuffer0, (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) null, (CharSequence) "dGX");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) null, (CharSequence) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "h-^*y\"pYwS3GBk#+V%;A+'Ec/~We{");
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) charBuffer0, (CharSequence) "h-^*y\"pYwS3GBk#+V%;A+'Ec/~We{");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.containsNone(charBuffer0, charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsNone(" ", (char[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      char[] charArray0 = new char[8];
      boolean boolean0 = ToolBox.StringTools.containsNone("e2EEWXj\"I>", charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      char[] charArray0 = new char[16];
      boolean boolean0 = ToolBox.StringTools.containsNone((CharSequence) null, charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) null, (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      char[] charArray0 = new char[10];
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "\n", charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      char[] charArray0 = new char[0];
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "\n", charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("70]bPK<sUJY2.oB5^'`lUv$y&\"x,JJ?U}F]#}}v_v|;n5%I^f&,g(b:7#t<n\r%B-uGrM~qf].wKs5V=");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.contains("", 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("]0xd=");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("#7.@GTI%v\"s/#tvI1qT_.;DdL5wEW[h48GcS;}MXrHgQ.1Ys;<N6 |8T8+'&{{_R", (String) null, true);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("", "$5Lp$QQ*9W-2GGiKF,f<b0%w9Z0X4vWSMZ[F-U\"g\u0007x", true);
      assertEquals((-42), int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase((String) null, "'r@*&-FC%LV:k-]i8DW/L9UxbI", false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase((String) null, "'r@*&-FC%LV:k-]i8DW/L9UxbI", true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("W=X", "W=X", true);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("#7.@GTI%v\"s/#tvI1qT_.;DdL5wEW[h48GcS;}MXrHgQ.1Ys;<N6 |8T8+'&{{_R", (String) null, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("$E$@nKCHhB ctcsch27brh.UZ!F7&'[e.Y<%LJa@Uq$FDv^I)<,P", (String) null, true);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("", "$E$@nKCHhB ctcsch27brh.UZ!F7&'[e.Y<%LJa@Uq$FDv^I)<,P", false);
      assertEquals((-52), int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare((String) null, "w=V(K_$d3(@PTQ=|j~S]#W,x|T+Zd@R.l`j,}c(NziOlQPA4X!sp15Y]\"6(ku)O", true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare((String) null, "w=V(K_$d3(@PTQ=|j~S]#W,x|T+Zd@R.l`j,}c(NziOlQPA4X!sp15Y]\"6(ku)O", false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("", "", false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("$E$@nKCHhB ctcsch27brh.UZ!F7&'[e.Y<%LJa@Uq$FDv^I)<,P", (String) null, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      int int0 = ToolBox.StringTools.length((CharSequence) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("p'qI~T}_jn@", "p'qI~T}_jn@", (String) null);
      assertEquals("p'qI~T}_jn@", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("k_E=9Gk('&qSRl,p9F)ZVYjSj?3vMX S5SNFZv(|+9QO{Cw? }Y~.07y;,k\"XJ", (String) null, (String) null);
      assertEquals("k_E=9Gk('&qSRl,p9F)ZVYjSj?3vMX S5SNFZv(|+9QO{Cw? }Y~.07y;,k\"XJ", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("}RpD'~Y#^Jr\"|Jmh7~WpR7%F~D+lIj^g.ldDu`b(jz9\";U%&!CIGqZ~l9%0pQ'9x*2pJpdi)p/@_wIdqu|X", "}RpD'~Y#^Jr\"|Jmh7~WpR7%F~D+lIj^g.ldDu`b(jz9\";U%&!CIGqZ~l9%0pQ'9x*2pJpdi)p/@_wIdqu|X", ")Fh4VsiufRi_&4)>)|{gV7fYD1R,^g(u|'U%N7dN#@wr`9u^/^uLp#?wP:+Le1){>@tL`P?LZ,Ebl~o+8l;ejqS%(&");
      assertEquals("}RpD'~Y#^Jr\"|Jmh7~WpR7%F~D+lIj^g.ldDu`b(jz9\";U%&!CIGqZ~l9%0pQ'9x*2pJpdi)p/@_wIdqu|)Fh4VsiufRi_&4)>)|{gV7fYD1R,^g(u|'U%N7dN#@wr`9u^/^uLp#?wP:+Le1){>@tL`P?LZ,Ebl~o+8l;ejqS%(&", string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern((String) null, (String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.RegExTools.replaceFirst("k_E=9Gk('&qSRlp9F)ZVYjSj?3vMX S5SNFZv(|+9QO{Cw? }Y~.07y;,k\"XJ", "k_E=9Gk('&qSRlp9F)ZVYjSj?3vMX S5SNFZv(|+9QO{Cw? }Y~.07y;,k\"XJ", "k_E=9Gk('&qSRlp9F)ZVYjSj?3vMX S5SNFZv(|+9QO{Cw? }Y~.07y;,k\"XJ");
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Dangling meta character '+' near index 39
         // k_E=9Gk('&qSRlp9F)ZVYjSj?3vMX S5SNFZv(|+9QO{Cw? }Y~.07y;,k\"XJ
         //                                        ^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("#zA]ob:)>uWk0hu9\"yc#Yvy[OterBpOXON&ngGzVF^Rl~+8jUkU5G!Uoo$.>1iepk)X,bIYD0ayR7=}'Uw#JC.ggy6A\"n?Df", (String) null, "#zA]ob:)>uWk0hu9\"yc#Yvy[OterBpOXON&ngGzVF^Rl~+8jUkU5G!Uoo$.>1iepk)X,bIYD0ayR7=}'Uw#JC.ggy6A\"n?Df");
      assertEquals("#zA]ob:)>uWk0hu9\"yc#Yvy[OterBpOXON&ngGzVF^Rl~+8jUkU5G!Uoo$.>1iepk)X,bIYD0ayR7=}'Uw#JC.ggy6A\"n?Df", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("D.'ba30y\u0005sZY/\"GKgeg;tFL5=K$1/R>*Ls[NY^iv=R^;|3?AE:izCH)UB8/$A\tyQoB1jF9G=)tLxy)L4JSy:@MPU2RrTCx;!", "D.'ba30y\u0005sZY/\"GKgeg;tFL5=K$1/R>*Ls[NY^iv=R^;|3?AE:izCH)UB8/$A\tyQoB1jF9G=)tLxy)L4JSy:@MPU2RrTCx;!", (String) null);
      assertEquals("D.'ba30y\u0005sZY/\"GKgeg;tFL5=K$1/R>*Ls[NY^iv=R^;|3?AE:izCH)UB8/$A\tyQoB1jF9G=)tLxy)L4JSy:@MPU2RrTCx;!", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst((String) null, (String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = ToolBox.RegExTools.replaceFirst("", pattern0, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = ToolBox.RegExTools.replaceFirst("", pattern0, (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("W=X", (Pattern) null, "W=X");
      assertEquals("W=X", string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst((String) null, (Pattern) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("T1l", "T1l", "T1l");
      assertEquals("T1l", string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("k_E=9Gk('&qSRl,p9F)ZVYjSj?3vMX S5SNFZv(|+9QO{Cw? }Y~.07y;,k\"XJ", (String) null, "k_E=9Gk('&qSRl,p9F)ZVYjSj?3vMX S5SNFZv(|+9QO{Cw? }Y~.07y;,k\"XJ");
      assertEquals("k_E=9Gk('&qSRl,p9F)ZVYjSj?3vMX S5SNFZv(|+9QO{Cw? }Y~.07y;,k\"XJ", string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("8r{bp9}y1$$C^r&3\"g73\"dl~KFHh2U;9;D>WHrP_hD7sHG;c}X7mXI_yiqt1$EUNX}Is+~m01Ji7}??I<*ZtvGLm{", "8r{bp9}y1$$C^r&3\"g73\"dl~KFHh2U;9;D>WHrP_hD7sHG;c}X7mXI_yiqt1$EUNX}Is+~m01Ji7}??I<*ZtvGLm{", (String) null);
      assertEquals("8r{bp9}y1$$C^r&3\"g73\"dl~KFHh2U;9;D>WHrP_hD7sHG;c}X7mXI_yiqt1$EUNX}Is+~m01Ji7}??I<*ZtvGLm{", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll((String) null, (String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("XGF\"/[@kz1@]BUZ}r?KgupkNVImH!5='xNdsVDRe\"kAmN8xMp|!!}6lN;I*3a/,i]Y@w@RG>`a");
      String string0 = ToolBox.RegExTools.replaceAll("XGF\"/[@kz1@]BUZ}r?KgupkNVImH!5='xNdsVDRe\"kAmN8xMp|!!}6lN;I*3a/,i]Y@w@RG>`a", pattern0, (String) null);
      assertEquals("XGF\"/[@kz1@]BUZ}r?KgupkNVImH!5='xNdsVDRe\"kAmN8xMp|!!}6lN;I*3a/,i]Y@w@RG>`a", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("-", (Pattern) null, "-");
      assertEquals("-", string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("\r");
      String string0 = ToolBox.RegExTools.replaceAll("\r", pattern0, "\r");
      assertEquals("\r", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("\n");
      String string0 = ToolBox.RegExTools.replaceAll((String) null, pattern0, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[1] = '\u0085';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.allocate('\u0085');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer1, charBuffer0, 83);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(43);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "8.ChSP`RGbG-TFH/j+UoEGISAN6@T0<", 43);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(16);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("K05{>~[ylxx2%Wzg9ug5!Gd@jN]D9bf! ]^", charBuffer0, 16);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "8.ChSP`RGbG-TFH/j+UoEGISAN6@T0<", 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(68);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\n");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "\n", 29);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("\r", "\r", (-2839));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "}RpD'~Y#^Jr\"|Jmh7~WpR7%F~D+lIj^g.ldDu`b(jz9\";U%&!CIGqZ~l9%0pQ'9x*2pJpdi)p/@_wIdqu|)Fh4VsiufRi_&4)>)|{gV7fYD1R,^g(u|'U%N7dN#@wr`9u^/^uLp#?wP:+Le1){>@tL`P?LZ,Ebl~o+8l;ejqS%(&");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "}RpD'~Y#^Jr\"|Jmh7~WpR7%F~D+lIj^g.ldDu`b(jz9\";U%&!CIGqZ~l9%0pQ'9x*2pJpdi)p/@_wIdqu|X", 49);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf((CharSequence) null, "", 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(16);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, 16);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf((CharSequence) null, (CharSequence) null, (-225));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 1114108, '\u0000');
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      char[] charArray0 = new char[17];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 1114135, 1114135);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(16);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 16, 16);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(65536);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 65536, 65536);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      char[] charArray0 = new char[11];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, (-773), (-773));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("]0xd=", 64, 64);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(16);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "oEEPXI&y'jygZ0)RDpg:;~\"jKYVj],[t#n01S!+lx:_x4t~~Ivf]CE2t~pC0{38:0gre.^/y<?<'2sMY_(");
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 32, "oEEPXI&y'jygZ0)RDpg:;~\"jKYVj],[t#n01S!+lx:_x4t~~Ivf]CE2t~pC0{38:0gre.^/y<?<'2sMY_(", 1, 32);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3084);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 43, charBuffer0, 43, 43);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "oEEPXI&y'jygZ0)RDpg:;~\"jKYVj],[t#n01S!+lx:_x4t~~Ivf]CE2t~pC0{38:0gre.^/y<?<'2sMY_(");
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 32, "oEEPXI&y'jygZ0)RDpg:;~\"jKYVj],[t#n01S!+lx:_x4t~~Ivf]CE2t~pC0{38:0gre.^/y<?<'2sMY_(", 1, 32);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 2, charBuffer0, 2, 2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3084);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 3084, charBuffer0, 3084, (-1598));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3084);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 3084, charBuffer0, (-2715), 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(16);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 0, charBuffer0, 16, 16);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "8.ChSP`RGbG-T/j+UJEISAN6@T0<A");
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, (-1298), "8.ChSP`RGbG-T/j+UJEISAN6@T0<A", (-1298), (-1298));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("\n", false, (-1), "\n", (-1), (-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.CharSequenceTools.regionMatches("\n", false, (-2034), (CharSequence) null, (-2034), (-2034));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("comp5111.assignment.cut.ToolBox$CharSequenceTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3084);
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) charBuffer0, (CharSequence) charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "", (CharSequence) "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.indexOf("L9e", "L9e", 45);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(68);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, charBuffer0, 68);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      char[] charArray0 = new char[17];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 1114131, 1114131);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      char[] charArray0 = new char[17];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 1114109, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2388);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, (CharSequence) charBuffer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(68);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 68, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      short[] shortArray0 = new short[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(shortArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      short[] shortArray0 = new short[1];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(shortArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      String string0 = ToolBox.StringTools.getCommonPrefix((String[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((long[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      long[] longArray0 = new long[4];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(longArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      int[] intArray0 = new int[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(intArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      int[] intArray0 = new int[2];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((float[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      float[] floatArray0 = new float[13];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(floatArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((double[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(doubleArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      char[] charArray0 = new char[0];
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "\n", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "\"DNn[zUwig[-7]gez83~gAP?7hSK8q2R;z*Zw^#pkURS*\"(~2y.6ML; tZ&&KTM8Bbx0m+/~1<}2", (CharSequence) "\"DNn[zUwig[-7]gez83~gAP?7hSK8q2R;z*Zw^#pkURS*\"(~2y.6ML; tZ&&KTM8Bbx0m+/~1<}2");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((byte[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(booleanArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[6];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(booleanArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_XCPG4_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _XCPG4_
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_XCz");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _XCz
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_X~k48");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _X~k48
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_53GqFjL|~FW01-kSrF`c;Bc2iuxkC'MKO.wt.Sw$j27D18Wr]>MzJ%}@}1E$ssVd(5WQ5(]5w~/ z4wA,:=NC<L<(");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _53GqFjL|~FW01-kSrF`c;Bc2iuxkC'MKO.wt.Sw$j27D18Wr]>MzJ%}@}1E$ssVd(5WQ5(]5w~/ z4wA,:=NC<L<(
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("_CP");
      assertEquals("_CP", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _8
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("\r");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: \r
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("y\"pyws3gk#+vw;a+");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: y\"pyws3gk#+vw;a+
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("");
      assertEquals("", locale0.getISO3Country());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale((String) null);
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("L9e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: L9e
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("fo_{M@O/T\"e0&P-]A8(uT]L4{lVm<`i^6dzxYcu;j,[Q2rT`X dt{4dhp<");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: fo_{M@O/T\"e0&P-]A8(uT]L4{lVm<`i^6dzxYcu;j,[Q2rT`X dt{4dhp<
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("StIp_0");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: StIp_0
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("t_XCPG4_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: t_XCPG4_
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("coh");
      assertNotNull(locale0);
      assertEquals("coh", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("tu_yjt_v$oG9c$LH!}2z$gdH.O7,`*$cCKHh2|%qp<o^p<kR");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: tu_yjt_v$oG9c$LH!}2z$gdH.O7,`*$cCKHh2|%qp<o^p<kR
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ToolBox.CharTools toolBox_CharTools0 = new ToolBox.CharTools();
      assertEquals('\u0000', ToolBox.CharTools.NUL);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ToolBox toolBox0 = new ToolBox();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ToolBox.ArrayTools toolBox_ArrayTools0 = new ToolBox.ArrayTools();
      assertEquals((-1), ToolBox.ArrayTools.INDEX_NOT_FOUND);
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ToolBox.CharSequenceTools toolBox_CharSequenceTools0 = new ToolBox.CharSequenceTools();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ToolBox.LocaleTools toolBox_LocaleTools0 = new ToolBox.LocaleTools();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ToolBox.RegExTools toolBox_RegExTools0 = new ToolBox.RegExTools();
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ToolBox.StringTools toolBox_StringTools0 = new ToolBox.StringTools();
      assertEquals((-1), ToolBox.StringTools.INDEX_NOT_FOUND);
  }
}
