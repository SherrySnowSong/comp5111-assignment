/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 01 18:01:49 GMT 2021
 */

package comp5111.assignment.cut;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import comp5111.assignment.cut.ToolBox;
import java.nio.CharBuffer;
import java.util.Locale;
import java.util.function.Supplier;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

public class ToolBox_ESTest extends ToolBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(".4L");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("\u0004E7L");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("L");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("+l");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("_F");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("}f");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("ID");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("td");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("q73e&");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("5.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("5..");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("5E");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("te");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("%5");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("H8e-eM.OP;50H@");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("H8e-mM.OT;5NH@");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("y4E.N");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("..............................................");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("m+D9`E(-?Qk`]/{;P,)D)mbf{*r:MO&)m%@W^&");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("<6E.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("{02eVs7T<F");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("{027");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("@04\"?CW(o'P>gbW!+l]I0>g`=gAd*Ul+>Yn=AD( ~x82na");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("{0xCdk$w]5s7R@");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("{0x\"w@");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("J0xB");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("j0x");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("{0X7_gH");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(";0tUz'<.wAqe&;S[");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("{0]eVs7T<F");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("-n?5x*^1wG.P!|Y;p^9?=c8v%3zyLW1/TgI2F=");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("$]k+(Q");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[3] = 'C';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.isMixedCase(charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.isMixedCase(charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase(".x4Cr=9J1RLW}RY3Oh{u");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("C");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase((CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllLowerCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = " ";
      stringArray0[1] = " ";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[3];
      charSequenceArray0[0] = (CharSequence) ".x4C\r=9J1RLW}RY3Oh{u";
      charSequenceArray0[1] = (CharSequence) ".x4Cr=9J1RLW}RY3Oh{u";
      charSequenceArray0[2] = (CharSequence) ".x4Cr=9J1RLW}RY3Oh{u";
      int int0 = ToolBox.StringTools.indexOfDifference(charSequenceArray0);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, (CharSequence) "C");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "\r", (CharSequence) "");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) null, (CharSequence) "Xf;w$Z5+i[hR<+bpCC{!0@:x,?Yq;:%,)HU~");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'k';
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "kq+zav&z}ejnfg{50a%rj/ycqm?n:95dpo3n'et}r}cba", charArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      char[] charArray0 = new char[0];
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "cAYK@DTTx2;Db'%.'q3$t6tX@0aZuxP", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      char[] charArray0 = new char[4];
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) null, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.StringTools.indexOfAny(charBuffer0, charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[4] = '+';
      int int0 = ToolBox.StringTools.indexOfAny("Mn]+;M/I^e%'ONxJW[2 .CTI?RB", charArray0);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.put("_");
      int int0 = ToolBox.StringTools.indexOfAny(charBuffer0, charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[3] = '\'';
      int int0 = ToolBox.StringTools.indexOfAny("Mn]+;M/I^e%'ONxJW[2 .CTI?RB", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      char[] charArray0 = new char[0];
      int int0 = ToolBox.StringTools.indexOfAny((CharSequence) null, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      CharSequence charSequence0 = ToolBox.StringTools.getIfEmpty((CharSequence) null, (Supplier<CharSequence>) null);
      assertNull(charSequence0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      Supplier<String> supplier0 = (Supplier<String>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn("_").when(supplier0).get();
      String string0 = ToolBox.StringTools.getIfEmpty("", supplier0);
      assertNotNull(string0);
      assertEquals("_", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      Supplier<CharSequence> supplier0 = (Supplier<CharSequence>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      CharSequence charSequence0 = ToolBox.StringTools.getIfEmpty((CharSequence) charBuffer0, supplier0);
      assertEquals(5, charSequence0.length());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "\n";
      stringArray0[1] = "R2IF%D)h#o[Ux`e/N'%#z";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("\n", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String[] stringArray0 = new String[1];
      stringArray0[0] = "!.j9(Ha$ZjjeriOaQyf1<o=E-m";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("!.j9(Ha$ZjjeriOaQyf1<o=E-m", string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String[] stringArray0 = new String[5];
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\r");
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) charBuffer0, (CharSequence) " ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\r");
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "\r", (CharSequence) charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "\n", (CharSequence) "J'2l\n");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "yXBfH", (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) null, (CharSequence) "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "\r", (CharSequence) "\r");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.put("_");
      boolean boolean0 = ToolBox.StringTools.containsNone(charBuffer0, charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsNone("\n", (char[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      char[] charArray0 = new char[0];
      boolean boolean0 = ToolBox.StringTools.containsNone("_", charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      char[] charArray0 = new char[0];
      boolean boolean0 = ToolBox.StringTools.containsNone((CharSequence) null, charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) null, (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      char[] charArray0 = new char[9];
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "\r", charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      char[] charArray0 = new char[0];
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) null, charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.contains(charBuffer0, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.contains("", 29);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("", (String) null, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("", (String) null, true);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase((String) null, "\">ZOFIbEzD5'O,}.@~5S>2Er@/hg)5+mFN?Ws%=B7!%Sc\"e1E", false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase((String) null, "", true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("\r", "\r", true);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("_", "\r", true);
      assertEquals(82, int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("_", (String) null, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("[.2kt2'gEh MVZyyY7\"?hNBZc", (String) null, true);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare((String) null, "A,' &f4R((*OnxN?i(8UM^t8. % uUw-1qq!B!*5-&}^y", true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare((String) null, "<.+A-eI_ttU(8|yq(W|]Y)yp,`5J}&y>", false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("", "", false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray((CharSequence) null);
      assertArrayEquals(new char[] {}, charArray0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("eH,8p9%@l:!BjzaRkEK=gCMY_}@.D`Ld)5R>M'IPv.c.i", "eH,8p9%@l:!BjzaRkEK=gCMY_}@.D`Ld)5R>M'IPv.c.i", (String) null);
      assertEquals("eH,8p9%@l:!BjzaRkEK=gCMY_}@.D`Ld)5R>M'IPv.c.i", string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("", (String) null, "SHv[qiv ?F^l5j>PFVtr X:]q:9~|rKK(-OO");
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern((String) null, "", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("", "", (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("Zojfh<.f<sIe5O3Zp5kNBddTZscz", "", "Zojfh<.f<sIe5O3Zp5kNBddTZscz");
      String string1 = ToolBox.RegExTools.replaceFirst("", (String) null, string0);
      assertEquals("", string1);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("_", "", "");
      assertEquals("_", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst((String) null, (String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("K<#HK\"*6/<n");
      String string0 = ToolBox.RegExTools.replaceFirst("", pattern0, (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("HG8-s]K?/&;)T@3hr6t=s", (Pattern) null, "comp5111.assignent.cut.ToolBox$CharTools");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("IkO0*S");
      String string0 = ToolBox.RegExTools.replaceFirst("IkO0*S", pattern0, "6OUv'-Ffr_+yWJ{Il6Whx!!u|Jn$EFI2j1MwoLMPid'S");
      assertEquals("IkO0*S", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("", 1126);
      String string0 = ToolBox.RegExTools.replaceFirst((String) null, pattern0, "E;(E(/-4ayMbP4p=Yw!\" X(oBaHz{,i1s?'jy[KY.c*");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("\n", "\n", (String) null);
      assertEquals("\n", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("comp5111.assignment.cut.ToolBox$ArrayTools", (String) null, "g) yVy![6|p");
      assertEquals("comp5111.assignment.cut.ToolBox$ArrayTools", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("C", "C", "C");
      assertEquals("C", string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll((String) null, "35&5Fy+3a^eLP0o~}C%h^W$S~t<[FKuspW-JSm2mHe", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("", 116);
      String string0 = ToolBox.RegExTools.replaceAll("", pattern0, (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("HG8-s]K?/&;)T@3hr6t=s", (Pattern) null, ">patG");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("PDVE~|?(s O+lZyu'[)uX{zXq(ql0}UzqociACS!,j/t]", 1882);
      String string0 = ToolBox.RegExTools.replaceAll("comp5111.assignment.cut.ToolBox$CharTools", pattern0, "ewn^Ak-\"U");
      assertEquals("comp5111.assignment.cut.ToolBox$CharTools", string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("\r", 0);
      String string0 = ToolBox.RegExTools.replaceAll((String) null, pattern0, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "y*y*m");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "y*m", 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "6OUv'-Ffr_+yWJ{Il6Whx!!u|Jn$EFI2j1MwoLMPid'S");
      char[] charArray0 = new char[15];
      charBuffer0.get(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "IkO0*S", '4');
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "_", 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\r");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("\r", charBuffer0, 99);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(102);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, 2034);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "OMm*qVK*L2gf`qO!Q{$R.a@%jQ{#$H9_,>_`EkS#Uh`0", 10, 10);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("OMm*qVK*L2gf`qO!Q{$R.a@%jQ{#$H9_,>_`EkS#Uh`0", charBuffer0, 40);
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf((CharSequence) null, " ", 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("\n", " ", 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf((CharSequence) null, (CharSequence) null, 6);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 65536, 81);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 1114136, 70);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'v';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 0, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(564);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 1, (-1544));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("_", 55, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 65667, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2727);
      charBuffer0.put((int) '\u0001', '\u0001');
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 'W', charBuffer0, '\u0001', '\u0001');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(4616);
      CharBuffer charBuffer1 = charBuffer0.put(48, 'F');
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 524, charBuffer1, 0, 524);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(4616);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 524, charBuffer0, 0, 524);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 0, "", 108, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " ");
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 1538, charBuffer0, 1538, (-2150));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\r");
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("\r", true, 0, charBuffer0, (-113), (-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("", true, 65, charBuffer0, 65, 65);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("ux_LF_vG/DC", false, 0, "ux_LF_vG/DC", 0, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, (-697), charBuffer0, 1, (-1871));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(120);
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) charBuffer0, (CharSequence) charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "yXBfH", (CharSequence) "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray("\r");
      assertEquals(1, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.indexOf("Mn]+;M/I^e%'ONxJW[2 .CTI?RB", "#", 1480);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, "8", (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(4068);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, Integer.MAX_VALUE, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'v';
      charArray0[1] = 'D';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.contains(charBuffer0, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 65536, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "\r", (CharSequence) "\r");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((short[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      short[] shortArray0 = new short[6];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(shortArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      long[] longArray0 = new long[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(longArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      long[] longArray0 = new long[4];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(longArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((int[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      int[] intArray0 = new int[5];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      float[] floatArray0 = new float[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(floatArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      float[] floatArray0 = new float[1];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(floatArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((double[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(doubleArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      char[] charArray0 = new char[0];
      int int0 = ToolBox.StringTools.indexOfAny("\n", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((byte[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((boolean[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[7];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(booleanArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("_QX_`U");
      assertEquals("`U", locale0.getVariant());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_FXp=R");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _FXp=R
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_FXp");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _FXp
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_E&R");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _E&R
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_jiX=rR");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _jiX=rR
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("_FX");
      assertEquals("_FX", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_j");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _j
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("\n");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: 
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("#");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: #
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("");
      assertEquals("", locale0.getLanguage());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale((String) null);
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("uup__");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: uup__
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("BIN~.azU;PW\"O_q.4!YycH.Z8Rbd!6_h<fqg[G.?{Xj");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: BIN~.azU;PW\"O_q.4!YycH.Z8Rbd!6_h<fqg[G.?{Xj
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("@04\"?CW(o'P>gbW!+l]I0>g`=gAd*Ul+>Yn=AD( ~x82na");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: @04\"?CW(o'P>gbW!+l]I0>g`=gAd*Ul+>Yn=AD( ~x82na
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("ux_PA");
      assertEquals("ux_PA", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("td");
      assertNotNull(locale0);
      assertEquals("td", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("ux_3_NXuA/csp");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: ux_3_NXuA/csp
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("ux_346_NXA/csp");
      assertNotNull(locale0);
      assertEquals("ux_346_NXA/csp", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("u_L;,wE*^4eNX8uA/csT/");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: u_L;,wE*^4eNX8uA/csT/
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("aik_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: aik_
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("ux_U_4NXu&A/csG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: ux_U_4NXu&A/csG
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("ux_LF_vG/DC");
      assertEquals("ux_LF_vG/DC", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ToolBox.ArrayTools toolBox_ArrayTools0 = new ToolBox.ArrayTools();
      CharBuffer charBuffer0 = CharBuffer.wrap(toolBox_ArrayTools0.EMPTY_CHAR_ARRAY);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "_", 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ToolBox.CharTools toolBox_CharTools0 = new ToolBox.CharTools();
      assertEquals('\n', ToolBox.CharTools.LF);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ToolBox.CharSequenceTools toolBox_CharSequenceTools0 = new ToolBox.CharSequenceTools();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ToolBox.LocaleTools toolBox_LocaleTools0 = new ToolBox.LocaleTools();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ToolBox.RegExTools toolBox_RegExTools0 = new ToolBox.RegExTools();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ToolBox.StringTools toolBox_StringTools0 = new ToolBox.StringTools();
      assertEquals((-1), ToolBox.StringTools.INDEX_NOT_FOUND);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ToolBox toolBox0 = new ToolBox();
  }
}
