/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 01 15:16:15 GMT 2021
 */

package comp5111.assignment.cut;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import comp5111.assignment.cut.ToolBox;
import java.nio.CharBuffer;
import java.util.Locale;
import java.util.function.Supplier;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

public class ToolBox_ESTest extends ToolBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("\"4L");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(";0EL");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("y.2L");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("yL");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("3l");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("RF");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("qf");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("-D");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("7d");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(";0E.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("j..");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("j.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("f5E");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("M9");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("08&");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(";0E+oFC");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("T-aO");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("UE+o6 8;bW$c.K");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(";0eEC");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(">0E.C");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("4..hwbsc?y8,;=XViZ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("(e");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("Y06LwD0");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("300&DI");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("r061");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("{0x1BJ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("{0xc+q");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("{0x5");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("{0Xxq");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("{0x");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("+~'}9YlJ]'[u");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("\n");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("F/r");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("DY2C1U");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("j8=");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("_");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("comp5111.assignment.cut.ToolBox$ArrayTools");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllUpperCase((CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllLowerCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isNumeric("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "comp5111.assignment.cut.ToolBox$ArrayTools";
      stringArray0[1] = "comp5111.assignment.cut.ToolBox$ArrayTools";
      stringArray0[2] = "comp5111.assignment.cut.ToolBox$ArrayTools";
      stringArray0[3] = "comp5111.assignment.cut.ToolBox$ArrayTools";
      stringArray0[4] = "comp5111.assignment.cut.ToolBox$ArrayTools";
      stringArray0[5] = "comp5111.assignment.cut.ToolBox$ArrayTools";
      stringArray0[6] = "comp5111.assignment.cut.ToolBox$ArrayTools";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("comp5111.assignment.cut.ToolBox$ArrayTools", string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[7];
      charSequenceArray0[0] = (CharSequence) "pT2}>y!1?F";
      charSequenceArray0[1] = (CharSequence) "pT2}>y!1?F";
      charSequenceArray0[2] = (CharSequence) "s";
      charSequenceArray0[3] = (CharSequence) "pT2}>y!1?F";
      charSequenceArray0[4] = (CharSequence) "pT2}>y!1?F";
      charSequenceArray0[5] = (CharSequence) "s";
      charSequenceArray0[6] = (CharSequence) "s";
      int int0 = ToolBox.StringTools.indexOfDifference(charSequenceArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String[] stringArray0 = new String[8];
      stringArray0[0] = "poOCN`eH$o.8mo";
      stringArray0[1] = "fDadYxg#7Xm$PU^";
      stringArray0[2] = "poOCN`eH$o.8mo";
      stringArray0[3] = "poOCN`eH$o.8mo";
      stringArray0[4] = "poOCN`eH$o.8mo";
      stringArray0[5] = ":`F^K>7X~FN;%!y0A%p";
      stringArray0[6] = "l_!wy:#$:a2QkX$09";
      stringArray0[7] = "poOCN`eH$o.8mo";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "UE+o6 8;bW$c.K", (CharSequence) "\n");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "tdlu!@p8M", (CharSequence) "");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "", (CharSequence) "^);K($t");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'o';
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "onB DySQ%$ZM/6", charArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.allocate('e');
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      char[] charArray0 = new char[3];
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.StringTools.indexOfAny(charBuffer0, charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[2] = '8';
      int int0 = ToolBox.StringTools.indexOfAny("tdlu!@p8M", charArray0);
      assertEquals(7, int0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = ' ';
      int int0 = ToolBox.StringTools.indexOfAny(" ", charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[5] = '\"';
      int int0 = ToolBox.StringTools.indexOfAny("IuV\"Ckr", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      char[] charArray0 = new char[1];
      int int0 = ToolBox.StringTools.indexOfAny("", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Supplier<CharSequence> supplier0 = (Supplier<CharSequence>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      CharSequence charSequence0 = ToolBox.StringTools.getIfEmpty((CharSequence) "", supplier0);
      assertNull(charSequence0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = ToolBox.StringTools.getIfEmpty("", (Supplier<String>) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)127);
      Supplier<CharSequence> supplier0 = (Supplier<CharSequence>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      CharSequence charSequence0 = ToolBox.StringTools.getIfEmpty((CharSequence) charBuffer0, supplier0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", charSequence0.toString());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "j8=";
      stringArray0[1] = "D-TMK&QP>GxI SvF";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("j8=", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String[] stringArray0 = pattern0.split((CharSequence) "", 562);
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String[] stringArray0 = new String[0];
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(69);
      charBuffer0.put(45, 'm');
      CharBuffer charBuffer1 = CharBuffer.allocate(69);
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) charBuffer0, (CharSequence) charBuffer1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "'X|J`gEID|{{Dg", (CharSequence) "'X|J`gEID|{{Dg");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(69);
      CharBuffer charBuffer1 = CharBuffer.allocate(69);
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) charBuffer0, (CharSequence) charBuffer1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " ");
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) " ", (CharSequence) charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "onB DySQ%$ZM/6", (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) null, (CharSequence) "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) " ", (CharSequence) "|F.;?YH");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      char[] charArray0 = new char[1];
      boolean boolean0 = ToolBox.StringTools.containsNone("|F.;?YH", charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsNone(" ", (char[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.containsNone(charBuffer0, charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      char[] charArray0 = new char[1];
      boolean boolean0 = ToolBox.StringTools.containsNone((CharSequence) null, charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) null, (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      char[] charArray0 = new char[1];
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "|F.;?YH", charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      char[] charArray0 = new char[0];
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "UE+o6 8;bW$c.K", charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.contains("", 1606);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("4,!q", (String) null, true);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("4,!q", (String) null, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase((String) null, ";AEk(", true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase((String) null, "", false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("comp5111.assignment.cut.ToolBox$ArrayTools", "comp5111.assignment.cut.ToolBox$ArrayTools", false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("w)-,h#}n,{F;4", "", true);
      assertEquals(13, int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("", (String) null, true);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("", (String) null, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare((String) null, "\r", false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare((String) null, "DY2C1U", true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare(" ", " ", false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("@z[=9 ixW", " ", false);
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray((CharSequence) null);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "M9", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("onB DySQ%$ZM/6", "onB DySQ%$ZM/6", (String) null);
      assertEquals("onB DySQ%$ZM/6", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("ur=3", (String) null, "e2");
      assertEquals("ur=3", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("IuV\"Ckr", "IuV\"Ckr", "IuV\"Ckr");
      assertEquals("IuV\"Ckr", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern((String) null, ";0eEC", "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("Z|4r+mm^);K($t", "", (String) null);
      assertEquals("Z|4r+mm^);K($t", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("", (String) null, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst((String) null, "", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = ToolBox.RegExTools.replaceFirst("", pattern0, (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("\r", (Pattern) null, "len49");
      assertEquals("\r", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("UE+o6 8;bW$c.K");
      String string0 = ToolBox.RegExTools.replaceFirst("UE+o6 8;bW$c.K", pattern0, "UE+o6 8;bW$c.K");
      assertEquals("UE+o6 8;bW$c.K", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = ToolBox.RegExTools.replaceFirst((String) null, pattern0, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("", "", (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("GT4Ot|t'VaP1w/MI", (String) null, (String) null);
      assertEquals("GT4Ot|t'VaP1w/MI", string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("-Xw'", "-Xw'", "-Xw'");
      assertEquals("-Xw'", string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll((String) null, "", "comp5111.assignment.cut.ToolBox$CharTools");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = ToolBox.RegExTools.replaceAll("{!C^Qaz$Y$Z", pattern0, (String) null);
      assertEquals("{!C^Qaz$Y$Z", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("_ID", 2202);
      String string0 = ToolBox.RegExTools.replaceAll("x^R", pattern0, "g{d9B)G|6I]m6<");
      assertEquals("x^R", string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("comp5111.assignment.cut.ToolBox$ArrayTools", (Pattern) null, "comp5111.assignment.cut.ToolBox$ArrayTools");
      assertEquals("comp5111.assignment.cut.ToolBox$ArrayTools", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = ToolBox.RegExTools.replaceAll((String) null, pattern0, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('J');
      CharBuffer charBuffer1 = CharBuffer.allocate('J');
      CharBuffer charBuffer2 = charBuffer0.put(55, '\u01D8');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer2, charBuffer1, 'J');
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[3] = '\"';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "\"4c", 67);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("^);K($t", charBuffer0, 4620);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
      charBuffer0.append('#');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, 1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("comp5111.assignment.cut.ToolBox$ArrayTools", charBuffer0, 65561);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('K');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, " ", (-1948));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('e');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, 1);
      assertEquals(0, int0);
      
      String string0 = "Z|4r+mm";
      String string1 = ToolBox.RegExTools.replaceFirst("^);K($t", "pU!2;\"", "Z|4r+mm");
      int int1 = ToolBox.CharSequenceTools.lastIndexOf(string1, string0, int0);
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf((CharSequence) null, ";0eEC", 18);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, (byte)0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf((CharSequence) null, (CharSequence) null, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(140);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 65536, 65536);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('K');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 2147483645, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "comp5111.assignment.cut.ToolBox$ArrayTools");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, (-482), 65536);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2958);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, (-1), (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("_ID", (-890), (-890));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('K');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 65561, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('');
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 63, "comp5111.assignment.cut.ToolBox$ArrayTools", 23, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('e');
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 1, charBuffer0, 1, 1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)127);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 0, charBuffer0, (byte)127, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, (byte)13, charBuffer0, (byte)13, 3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 216, charBuffer0, (byte)13, (-1851));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 216, charBuffer0, (byte) (-1), (-1851));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('e');
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, (-1100), charBuffer0, (-1100), 4620);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.CharSequenceTools.regionMatches("M9", false, 'b', (CharSequence) null, ',', (-857));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("comp5111.assignment.cut.ToolBox$CharSequenceTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("nep", true, 59, "nep", 59, 59);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('');
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 63, "comp5111.assignment.cut.ToolBox$ArrayTools", 11, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(76);
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) charBuffer0, (CharSequence) charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "", (CharSequence) "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray("poOCN`eH$o.8mo");
      assertEquals(14, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.indexOf("nep", "nep", 59);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2958);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, charBuffer0, (-1124));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "/T");
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 2147483645, 2147483645);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, (CharSequence) charBuffer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.contains(charBuffer0, (byte)47);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('K');
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 65561, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      short[] shortArray0 = new short[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(shortArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      short[] shortArray0 = new short[17];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(shortArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      String[] stringArray0 = new String[8];
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((long[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      long[] longArray0 = new long[3];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(longArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      int[] intArray0 = new int[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(intArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      int[] intArray0 = new int[3];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((float[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      float[] floatArray0 = new float[5];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(floatArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(doubleArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      double[] doubleArray0 = new double[2];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(doubleArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      char[] charArray0 = new char[0];
      int int0 = ToolBox.StringTools.indexOfAny("jj_IS_FSBvH%nTGdB?0", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((byte[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((boolean[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[3];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(booleanArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("_ZB_B<.V};6");
      assertEquals("ZB", locale0.getCountry());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_IXY+g !$SX&g");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _IXY+g !$SX&g
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_LI@");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _LI@
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_Pvm=e_W0c");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _Pvm=e_W0c
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_&MH4pP@u]4+oZ~6I");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _&MH4pP@u]4+oZ~6I
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_K");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _K
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("_ID");
      assertEquals("IDN", locale0.getISO3Country());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("\r");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: \r
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("#");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: #
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("");
      assertEquals("", locale0.getISO3Language());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale((String) null);
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("jj__");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: jj__
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("+_uy7_gbnHiU");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: +_uy7_gbnHiU
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("~+x\"=L");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: ~+x\"=L
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("jj_6_F)BC?GB?0");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: jj_6_F)BC?GB?0
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("x_M[@~5{)4\"r");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: x_M[@~5{)4\"r
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("nep");
      assertNotNull(locale0);
      assertEquals("nep", locale0.getISO3Language());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("jj_S_ASDvH%TGdB?)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: jj_S_ASDvH%TGdB?)
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("jj_IS_FSBvH%nTGdB?0");
      assertNotNull(locale0);
      assertEquals("FSBvH%nTGdB?0", locale0.getVariant());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("xq_M[@{)4\"r");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: xq_M[@{)4\"r
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ToolBox.ArrayTools toolBox_ArrayTools0 = new ToolBox.ArrayTools();
      assertEquals((-1), ToolBox.ArrayTools.INDEX_NOT_FOUND);
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ToolBox.CharTools toolBox_CharTools0 = new ToolBox.CharTools();
      assertEquals('\n', ToolBox.CharTools.LF);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ToolBox.CharSequenceTools toolBox_CharSequenceTools0 = new ToolBox.CharSequenceTools();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ToolBox.LocaleTools toolBox_LocaleTools0 = new ToolBox.LocaleTools();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ToolBox.RegExTools toolBox_RegExTools0 = new ToolBox.RegExTools();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ToolBox.StringTools toolBox_StringTools0 = new ToolBox.StringTools();
      assertEquals((-1), ToolBox.StringTools.INDEX_NOT_FOUND);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ToolBox toolBox0 = new ToolBox();
  }
}
