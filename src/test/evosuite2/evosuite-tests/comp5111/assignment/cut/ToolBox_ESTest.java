/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 31 08:39:36 GMT 2021
 */

package comp5111.assignment.cut;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import comp5111.assignment.cut.ToolBox;
import java.nio.CharBuffer;
import java.util.Locale;
import java.util.function.Supplier;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ToolBox_ESTest extends ToolBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("}6l");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("_F");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("1L");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("#D");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("*4d");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("E");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("(e");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("W5");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("16e-f");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("z+`N}z_z/eb%<(R-]+`N}z_z/eb%<(R-]q)5vn[d<0KPU7N=Y$-0V{[-Q:5dhLRpt>!hHMP()1T|u");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(")EN~y%@R");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("K6eEf");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("{3..N\"/TE=7*?5yJH~[Ad5mO74DN&3G^=f=fS3_dxI5yIy_K");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(":.Gt$ed95lRD'(Z{)21)i<2xn99v'/<{iIHrt)UH6U{fJ)?+z^*A.m&)-$PvV67\u0005.`F{x7`'_k$'3kQ3nK6ECSXW9FLI_#4Qe");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("K6eG");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(" ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("~007{]_1~><qq|x\"urp");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("l00");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("C06\"Wh-*sAZw0=mCD*4*");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("|0X93v&o0b2;X#b\"");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("Z0XcX");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("]0X0");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("50snS]|em#q~V,AnlZZ29zd]N):sk@%OJ6-;[rf=-5~|yCxT;>cASw\"_Bm)n;o8HJ@J>^OX[\"%~$!5MtYjX7NK06P[C$Txow");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("d0x&;#d[I`XoWejd*;%E+7*:n *pr%498JtC?z4|:");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("F.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("+asxRP_j<O `,;9JRPzmud#L*sF#d!5HMYHMtI");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("-O_+.6l]!WK<}O?MML(*'iPAh%ss|gl ecoJH3f6$`");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("$?j");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("L!");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("comp5111.assignm^nt.cut.ToolBox$LocaleTools");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("\r");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("[^&,re2M");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllUpperCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllLowerCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isNumeric((CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "A+>yV+kcs?l<7n$4|##\"IK(7'`hyG{";
      stringArray0[1] = "A+>yV+kcs?l<7n$4|##\"IK(7'`hyG{";
      stringArray0[2] = "A+>yV+kcs?l<7n$4|##\"IK(7'`hyG{";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("A+>yV+kcs?l<7n$4|##\"IK(7'`hyG{", string0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "A+>yV+kcs?l<7n$4|##\"IK(7'`hyG{";
      stringArray0[1] = ";";
      stringArray0[2] = ";";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[2] = "";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "\n", (CharSequence) "z+`n}`n}z_%<(r-]+`n}z_z/eb%<(r-]q)5vn[d<0kpu7n=yl$-0v{[-q:5dhl\rpt>!hhmp()1t|u");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "\n", (CharSequence) "");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "", (CharSequence) "");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('\u009E');
      char[] charArray0 = new char[1];
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      char[] charArray0 = new char[1];
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "\r", charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      char[] charArray0 = new char[0];
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "\r", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('\u008A');
      char[] charArray0 = new char[1];
      int int0 = ToolBox.StringTools.indexOfAny(charBuffer0, charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray(" ");
      int int0 = ToolBox.StringTools.indexOfAny(" ", charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      char[] charArray0 = new char[1];
      int int0 = ToolBox.StringTools.indexOfAny("e_Td_", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      char[] charArray0 = ToolBox.ArrayTools.EMPTY_CHAR_ARRAY;
      int int0 = ToolBox.StringTools.indexOfAny(";eY(etO?mM&* F^p@m&[", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray("");
      int int0 = ToolBox.StringTools.indexOfAny("", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Supplier<CharSequence> supplier0 = (Supplier<CharSequence>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      CharSequence charSequence0 = ToolBox.StringTools.getIfEmpty((CharSequence) null, supplier0);
      assertNull(charSequence0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      String string0 = ToolBox.StringTools.getIfEmpty("", (Supplier<String>) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      String string0 = ToolBox.StringTools.getIfEmpty("=", (Supplier<String>) null);
      assertEquals("=", string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "F]/#~5/n^0qs'JNU@cMyP}dIYx8*J)9neb KdYboI:/>wJ8j)*1k_oZAsP7@M!X6'FNMa&Twg=*t Ken";
      stringArray0[1] = "~~007{~><qq|x\"ur";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("F]/#~5/n^0qs'JN", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " ");
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) " ", (CharSequence) charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1);
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) charBuffer0, (CharSequence) "\n");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) " ", (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) null, (CharSequence) "8-");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) " ", (CharSequence) " ");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "comp5111.assignment.cut.ToolBox$LocaleTools", (CharSequence) "S~YlY%gR/d>=&:g%|^CD3`Gn^#W{p[6J{?RnPAX_70EK/+;");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray(" ");
      boolean boolean0 = ToolBox.StringTools.containsNone(" ", charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      char[] charArray0 = new char[1];
      boolean boolean0 = ToolBox.StringTools.containsNone("\r", charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsNone("\n", (char[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) null, (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      char[] charArray0 = new char[1];
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "\n", charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) charBuffer0, charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("[0Pq9^~ ~-.Y8S)0aDfuk$`]6%nOgsjvY?cOr-S#tWSt8JoZi!isxVz");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.contains("", 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("", (String) null, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("oTXu=$p;yQmVy:h+)b\"kp0cSvA; TxhE&C!:%nh,z&'&g{&!W1nVoP&-NtrE|oIv|]]f(Th:Z*~2ko.yWY~z!}*K7e]9$.", (String) null, true);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase((String) null, "", false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("fn=Gs|TDoM5`3-F{)MVCWdDweu4Q`$m5Z%&B26%]'rI{LNYu{(-,TGFs#NNA9@a[`_/mAy0`Z554wN:)C=}7D$J<e\"", "", true);
      assertEquals(92, int0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("MN", "MN", false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase((String) null, "YD6.YX9p6@T'tg(:Oj\"+Pgq=fj?", true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare(" ", (String) null, true);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("", "\r", false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare((String) null, "", false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("<e8AWc?N)'^#^B4>R^rGc(q\"r%;8w=wsI# ", (String) null, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("comp5111.assignm^nt.cut.ToolBox$LocaleTools", "comp5111.assignm^nt.cut.ToolBox$LocaleTools", true);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare((String) null, "},BXYi)0Okf%&Zjcn|yE#jHvV\"{V]Bd7)fs`d2Zckvss|)", true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("", "", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern(" ", (String) null, (String) null);
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern(";", ";", (String) null);
      assertEquals(";", string0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern((String) null, (String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("\r", "comp5111.assignment.cut.ToolBox$CharTools", "comp5111.assignment.cut.ToolBox$CharTools");
      assertEquals("\r", string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst(")fKwoXA.W0Q9#Hl5l}4<Hm;(T'M6?!/zW&>qm~v)j5JX.c-CH2lJA nL`dmBF4@0p_<?HI(sn-7(_?i9mH", (String) null, ")fKwoXA.W0Q9#Hl5l}4<Hm;(T'M6?!/zW&>qm~v)j5JX.c-CH2lJA nL`dmBF4@0p_<?HI(sn-7(_?i9mH");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst(";eY(etO?mM&* FB^p@=m&[", ";eY(etO?mM&* FB^p@=m&[", (String) null);
      assertEquals(";eY(etO?mM&* FB^p@=m&[", string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst((String) null, (String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("k/O;%wrEjD?flfvSu_V#[;pp`E0zs|.,6~W?.-|_d~149q5dm-KQ%>b`b}#]l", 964);
      String string0 = ToolBox.RegExTools.replaceFirst("k/O;%wrEjD?flfvSu_V#[;pp`E0zs|.,6~W?.-|_d~149q5dm-KQ%>b`b}#]l", pattern0, (String) null);
      assertEquals("k/O;%wrEjD?flfvSu_V#[;pp`E0zs|.,6~W?.-|_d~149q5dm-KQ%>b`b}#]l", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("{*.n\"/te=b7*?5yjh~]fd5mog4d\n&3g^=f=fs3_dxi5yiy_k", (Pattern) null, "{*.n\"/te=b7*?5yjh~]fd5mog4d\n&3g^=f=fs3_dxi5yiy_k");
      assertEquals("{*.n\"/te=b7*?5yjh~]fd5mog4d\n&3g^=f=fs3_dxi5yiy_k", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("wtO\"*bW>+:?FV");
      String string0 = ToolBox.RegExTools.replaceFirst("wtO\"*bW>+:?FV", pattern0, "wtO\"*bW>+:?FV");
      assertEquals("wtO\"*bW>+:?FV", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst((String) null, (Pattern) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll(" ", " ", (String) null);
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll(" ", " ", " ");
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("", (String) null, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll((String) null, (String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("e", 13461);
      String string0 = ToolBox.RegExTools.replaceAll("e", pattern0, (String) null);
      assertEquals("e", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("]", 47);
      String string0 = ToolBox.RegExTools.replaceAll("]", pattern0, "]");
      assertEquals("]", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("t{5ea_o@Va<;2%V{1~rnxBgH8=0p^DyP@e@QDgP\"Q{90&Y%pG2g/6A7~)n*mo;f8ei@ahyJ|O!M85j-}{2\"", (Pattern) null, "t{5ea_o@Va<;2%V{1~rnxBgH8=0p^DyP@e@QDgP\"Q{90&Y%pG2g/6A7~)n*mo;f8ei@ahyJ|O!M85j-}{2\"");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll((String) null, (Pattern) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('l');
      char[] charArray0 = new char[3];
      charArray0[1] = 'l';
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer1, 1973);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      char[] charArray0 = new char[15];
      charArray0[12] = '\u01BA';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.allocate('\u01BA');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer1, charBuffer0, '\u01BA');
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('\n');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "aO");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("aO", charBuffer0, 118);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1027);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "{3.N\"/TE=B7*?5yJH~]Fd5mOg4DN&3G^=f=fS3_dxyIy_K", 1027);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('\u0000');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, '\u0000');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "\n", 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "z+`n}`n}z_%<(r-]+`n}z_z/eb%<(r-]q)5vn[d<0kpu7n=yl$-0v{[-q:5dhlF\rpt>!hhmp()1t|u");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "z+`n}`n}z_%<(r-]+`n}z_z/eb%<(r-]q)5vn[d<0kpu7n=yl$-0v{[-q:5dhlF\rpt>!hhmp()1t|u", (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf((CharSequence) null, "z+`n}`n}z_%<(r-]+`n}z_z/eb%<(r-]q)5vn[d<0kpu7n=yl$-0v{[-q:5dhl\rpt>!hhmp()1t|u", (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("F.", "F.", 2147483645);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf((CharSequence) null, (CharSequence) null, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(65536);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 65536, 65536);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3500);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 3500, 3500);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('\n');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(65555);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 65555, 2671);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(97);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, (-812), (-812));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(" ", (-1133), (-1133));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 2147483645, 2147483645);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('\u0089');
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("+(^.t/uN<}(d5iE~Ct(Kz,\"::.7J4[#U!-EI};aWm/Loghv$ux$QMhS~<i&7vVGEFG3`Y,hU'{{f1UA~\"YrG`>{^gT5#", true, 30, charBuffer0, 30, 30);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(2);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("{3.N\"/PTE=B7*?5yJH~]Fd5mOg4DN&3G^=f=fS3_dxI5yIy_K", false, 2, charBuffer0, 2, 2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(4557);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 4557, charBuffer0, 4557, 4557);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('\n');
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 0, charBuffer0, 0, (-1986));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('\n');
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, '\n', charBuffer0, (-1697), (-1697));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, (-1), charBuffer0, (-1), (-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("{3.N\"/TE=B7*?5yJH~]Fd5mOg4DN&3G^=f=fS3_dxI5yIy_K", false, 0, "{3.N\"/TE=B7*?5yJH~]Fd5mOg4DN&3G^=f=fS3_dxI5yIy_K", 0, 0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "{3.N\"/PTE=B7*?5yJH~]Fd5mOg4DN&3G^=f=fS3_dxI5yIy_K");
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("{3.N\"/PTE=B7*?5yJH~]Fd5mOg4DN&3G^=f=fS3_dxI5yIy_K", false, 2, charBuffer0, 2, 2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) ":.Gt$ed95lRD'(Z{)21)i<2xn99v'/<{iIHrt)UH6U{fJ)?+z^*A.m&)-$PvV67\u0005.`F{x7`'_k$'3kQ3nK6ECSXW9FLI_#4Qe");
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 10, ":.Gt$ed95lRD'(Z{)21)i<2xn99v'/<{iIHrt)UH6U{fJ)?+z^*A.m&)-$PvV67\u0005.`F{x7`'_k$'3kQ3nK6ECSXW9FLI_#4Qe", 0, 10);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(4557);
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) charBuffer0, (CharSequence) charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray((CharSequence) null);
      boolean boolean0 = ToolBox.StringTools.containsNone((CharSequence) null, charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray("_8RS(JYx|xPS|nDIWbkT'Te%ct;*`5&o7.v{Yb[|^K=*K8&0oBO8!-2kw\"D2@XmlirJN#p8@-!Uv");
      int int0 = ToolBox.StringTools.indexOfAny(")3T^&${5f$P821f@~WbgUlt.$3JLIP0D,vU1G5m._,2", charArray0);
      assertEquals(17, int0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.indexOf(" ", " ", 101);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, charBuffer0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(65536);
      // Undeclared exception!
      ToolBox.CharSequenceTools.indexOf(charBuffer0, 65536, 3485);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, Integer.MAX_VALUE, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(65536);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 65536, 65536);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1375);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, (-1620), (-1620));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(")0X");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(8322);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, (CharSequence) charBuffer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((short[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      short[] shortArray0 = new short[9];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(shortArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      String string0 = ToolBox.StringTools.getCommonPrefix((String[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      long[] longArray0 = new long[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(longArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      long[] longArray0 = new long[3];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(longArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((int[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      int[] intArray0 = new int[17];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      float[] floatArray0 = new float[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(floatArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      float[] floatArray0 = new float[1];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(floatArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((double[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(doubleArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      char[] charArray0 = new char[0];
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "\n", charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((byte[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(booleanArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[1];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(booleanArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_RIdd");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _RIdd
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_Rydd");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _Rydd
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("_WG");
      assertEquals("WG", locale0.getCountry());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_F");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _F
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_&VBzNwGwK\"UHPe^>ar$~t$w7_KVM>^gy:2;;-2lSC,L$h{4Y~F:}T5zg*OgC,},!LVy}}|pgMoPc$:}y");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _&VBzNwGwK\"UHPe^>ar$~t$w7_KVM>^gy:2;;-2lSC,L$h{4Y~F:}T5zg*OgC,},!LVy}}|pgMoPc$:}y
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("\r");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: \r
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("k*C^ NE$1=_FYoR}.3]Io,rv1#%!_Vn)++=xs1^8C_QN>Pmy>kMLmAKEwJ--j<cd2d,+UX9bRX<P#xb'!cYQ/]J>OUlC0-{");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: k*C^ NE$1=_FYoR}.3]Io,rv1#%!_Vn)++=xs1^8C_QN>Pmy>kMLmAKEwJ--j<cd2d,+UX9bRX<P#xb'!cYQ/]J>OUlC0-{
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("");
      assertEquals("", locale0.getISO3Language());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale((String) null);
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("vc_l?]`_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: vc_l?]`_
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("z+`N}z_z/eb%<(R-]+`N}z_z/eb%<(R-]q)5vn[d<0KPU7N=Y$-0V{[-Q:5dhLRpt>!hHMP()1T|u");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: z+`N}z_z/eb%<(R-]+`N}z_z/eb%<(R-]q)5vn[d<0KPU7N=Y$-0V{[-Q:5dhLRpt>!hHMP()1T|u
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("comp5111.assignment.cut.ToolBox$CharTools");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: comp5111.assignment.cut.ToolBox$CharTools
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("ic");
      assertNotNull(locale0);
      assertEquals("ic", locale0.getLanguage());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("GU@!4dy]_5");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: GU@!4dy]_5
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("z_z/eb");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: z_z/eb
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("tvc__");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: tvc__
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("vc_F");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: vc_F
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("cg_WG");
      assertNotNull(locale0);
      assertEquals("cg_WG", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("pv_768");
      assertNotNull(locale0);
      assertEquals("pv", locale0.getLanguage());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      ToolBox.CharTools toolBox_CharTools0 = new ToolBox.CharTools();
      assertEquals('\n', ToolBox.CharTools.LF);
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      ToolBox toolBox0 = new ToolBox();
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      ToolBox.ArrayTools toolBox_ArrayTools0 = new ToolBox.ArrayTools();
      assertEquals((-1), ToolBox.ArrayTools.INDEX_NOT_FOUND);
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      ToolBox.CharSequenceTools toolBox_CharSequenceTools0 = new ToolBox.CharSequenceTools();
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      ToolBox.LocaleTools toolBox_LocaleTools0 = new ToolBox.LocaleTools();
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ToolBox.RegExTools toolBox_RegExTools0 = new ToolBox.RegExTools();
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ToolBox.StringTools toolBox_StringTools0 = new ToolBox.StringTools();
      assertEquals((-1), ToolBox.StringTools.INDEX_NOT_FOUND);
  }
}
