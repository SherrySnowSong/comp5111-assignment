/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 01 15:37:59 GMT 2021
 */

package comp5111.assignment.cut;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import comp5111.assignment.cut.ToolBox;
import java.nio.CharBuffer;
import java.util.Locale;
import java.util.function.Supplier;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

public class ToolBox_ESTest extends ToolBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("b2l");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("b2el");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("BL");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("b.2l");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("hF");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("$f");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(">D");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("1d");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("wP");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(")0.");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(")..");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("\"0E");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("1e");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(")0e.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("qE.KKzr2z/6nR:7UsQ9x6cE1~0liNo7;");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("\"0EE[");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("e38e+.&K?");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("h..7\"y1R#/CYh}`&F~ujR1it");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("h.%.7\"y1R#/@CYh}`&F~ujR1it");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("b-uq]4,KF%{fzgBx;;/nKti1va2t");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(">6");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("'00[e+!wz4)Tn5Kx5P~5HGa$v-P6f2");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("'00*z4)T[5P~Ha-");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("P02");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("'0xEaS)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("'0xpS#)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("'0x&+!w)K~5vPe");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("'0x4");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("'0X");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("+=pF6<_xG=dT{I0=#d");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("-");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = 't';
      charArray0[3] = 'S';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.isMixedCase(charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'G';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.isMixedCase(charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("]&zJFy7_]sT");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("\n");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.isMixedCase(charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllUpperCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllLowerCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isNumeric("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[8];
      charSequenceArray0[0] = (CharSequence) "\n";
      charSequenceArray0[1] = (CharSequence) "\n";
      charSequenceArray0[2] = (CharSequence) "\n";
      charSequenceArray0[3] = (CharSequence) "\n";
      charSequenceArray0[4] = (CharSequence) "\n";
      charSequenceArray0[5] = (CharSequence) "\n";
      CharBuffer charBuffer0 = CharBuffer.wrap(charSequenceArray0[5]);
      charSequenceArray0[6] = (CharSequence) charBuffer0;
      charSequenceArray0[7] = (CharSequence) "\n";
      int int0 = ToolBox.StringTools.indexOfDifference(charSequenceArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[3];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\n");
      charSequenceArray0[0] = (CharSequence) charBuffer0;
      charSequenceArray0[1] = (CharSequence) "\r";
      charSequenceArray0[2] = (CharSequence) "\r";
      int int0 = ToolBox.StringTools.indexOfDifference(charSequenceArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[5];
      charSequenceArray0[4] = (CharSequence) "";
      int int0 = ToolBox.StringTools.indexOfDifference(charSequenceArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3112);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, (CharSequence) "f$Ovfnvf9J]EcA(jWF4h'0g^`\">GGjOu3:JWCpw}");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "/Ns[X.$;|I%Gp", (CharSequence) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) null, (CharSequence) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[7] = 'h';
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "how?;", charArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      char[] charArray0 = new char[14];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ToolBox.ArrayTools toolBox_ArrayTools0 = new ToolBox.ArrayTools();
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "Q~Bb?|N~{T{^a", toolBox_ArrayTools0.EMPTY_CHAR_ARRAY);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      char[] charArray0 = new char[14];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.append((CharSequence) charBuffer0);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.StringTools.indexOfAny(charBuffer0, charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[2] = 'j';
      int int0 = ToolBox.StringTools.indexOfAny("f$Ovfnvf9J]EcA(jWF4h'0g^`\">GGjOu3:JWCpw}", charArray0);
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[4] = ' ';
      int int0 = ToolBox.StringTools.indexOfAny("q ", charArray0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[1] = '9';
      int int0 = ToolBox.StringTools.indexOfAny("f$Ovfnvf9J]EcA(jWF4h'0g^`\">GGjOu3:JWCpw}", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      char[] charArray0 = new char[4];
      int int0 = ToolBox.StringTools.indexOfAny("", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = ToolBox.StringTools.getIfEmpty("", (Supplier<String>) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Supplier<String> supplier0 = (Supplier<String>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn(" ").when(supplier0).get();
      String string0 = ToolBox.StringTools.getIfEmpty("", supplier0);
      assertEquals(" ", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Supplier<String> supplier0 = (Supplier<String>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      String string0 = ToolBox.StringTools.getIfEmpty("]>;6[/oq", supplier0);
      assertEquals("]>;6[/oq", string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "QOz_n|0bR8f9g8CUn@z?wx%B,p.KI1B@kc/o:NX/.";
      stringArray0[1] = "sino$LUl96V'Xgo_f/R|Dc\"$imrK-";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("QOz_n|0bR8f9g8CUn@z?wx%B,p.KI", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = " ";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) charBuffer1, (CharSequence) charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "", (CharSequence) "=|my-JC%-VPoq4<qQ-`oD{>#8<*&&mu");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "", (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) null, (CharSequence) charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " ");
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "n", (CharSequence) charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.append((CharSequence) " ");
      boolean boolean0 = ToolBox.StringTools.containsNone(" ", charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsNone("", (char[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      char[] charArray0 = new char[2];
      boolean boolean0 = ToolBox.StringTools.containsNone("n", charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      char[] charArray0 = new char[1];
      boolean boolean0 = ToolBox.StringTools.containsNone((CharSequence) null, charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) null, (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      char[] charArray0 = new char[2];
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "n", charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.contains((CharSequence) null, (-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("", (String) null, true);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("", (String) null, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase((String) null, "uS8+BuOP1?-jj*4fe!nQmW([nC_99X\rfTPJ'dF]p<w:{<", true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase((String) null, "a A6(0n3s~:yeJ*Qo(F  %~l'W&;3>w:ymFUK%el", false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("[qAKF>vXho8vevR", "[qAKF>vXho8vevR", false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("/Ns[X.$;|I%Gp", "[qAKF>vXho8vevR", false);
      assertEquals((-80), int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("ltFlqh;>*_R<U3BGF)OY+EQ{V*lYfPP", (String) null, true);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("", (String) null, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare((String) null, "_8boJ)D", true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare((String) null, "IYcH7}G,FMpGBP{+dG6)fh'+5CULJg'Xv_PP01", false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("f$Ovfnvf9J]EcA(jWF4h'0g^`\">GGjOu3:JWCpw}", "f$Ovfnvf9J]EcA(jWF4h'0g^`\">GGjOu3:JWCpw}", true);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("f$Ovfnvf9J]EcA(jWF4h'0g^`\">GGjOu3:JWCpw}", "d\"~_4=a;{>ds]?I,g:qp}[%m07;.K+0wd:I@v597~q", true);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = ToolBox.StringTools.length((CharSequence) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("#cv#Gj@_-*]]@pnY{1#cv#Gj@_-*]]@pnY{Y#cv#Gj@_-*]]@pnY{m#cv#Gj@_-*]]@pnY{m#cv#Gj@_-*]]@pnY{L#cv#Gj@_-*]]@pnY{P#cv#Gj@_-*]]@pnY{y#cv#Gj@_-*]]@pnY{{#cv#Gj@_-*]]@pnY{T#cv#Gj@_-*]]@pnY{y#cv#Gj@_-*]]@pnY{)#cv#Gj@_-*]]@pnY{c#cv#Gj@_-*]]@pnY{\"#cv#Gj@_-*]]@pnY{P#cv#Gj@_-*]]@pnY{8#cv#Gj@_-*]]@pnY{F#cv#Gj@_-*]]@pnY{+#cv#Gj@_-*]]@pnY{I#cv#Gj@_-*]]@pnY{&#cv#Gj@_-*]]@pnY{ #cv#Gj@_-*]]@pnY{G#cv#Gj@_-*]]@pnY{0#cv#Gj@_-*]]@pnY{=#cv#Gj@_-*]]@pnY{s#cv#Gj@_-*]]@pnY{(#cv#Gj@_-*]]@pnY{o#cv#Gj@_-*]]@pnY{a#cv#Gj@_-*]]@pnY{H#cv#Gj@_-*]]@pnY{1#cv#Gj@_-*]]@pnY{4#cv#Gj@_-*]]@pnY{c#cv#Gj@_-*]]@pnY{p#cv#Gj@_-*]]@pnY{I#cv#Gj@_-*]]@pnY{1#cv#Gj@_-*]]@pnY{6#cv#Gj@_-*]]@pnY{", "1YmmLPy{Ty)c\"P8F+I& G0=s(oaH14cpI16", (String) null);
      assertEquals("#cv#Gj@_-*]]@pnY{1#cv#Gj@_-*]]@pnY{Y#cv#Gj@_-*]]@pnY{m#cv#Gj@_-*]]@pnY{m#cv#Gj@_-*]]@pnY{L#cv#Gj@_-*]]@pnY{P#cv#Gj@_-*]]@pnY{y#cv#Gj@_-*]]@pnY{{#cv#Gj@_-*]]@pnY{T#cv#Gj@_-*]]@pnY{y#cv#Gj@_-*]]@pnY{)#cv#Gj@_-*]]@pnY{c#cv#Gj@_-*]]@pnY{\"#cv#Gj@_-*]]@pnY{P#cv#Gj@_-*]]@pnY{8#cv#Gj@_-*]]@pnY{F#cv#Gj@_-*]]@pnY{+#cv#Gj@_-*]]@pnY{I#cv#Gj@_-*]]@pnY{&#cv#Gj@_-*]]@pnY{ #cv#Gj@_-*]]@pnY{G#cv#Gj@_-*]]@pnY{0#cv#Gj@_-*]]@pnY{=#cv#Gj@_-*]]@pnY{s#cv#Gj@_-*]]@pnY{(#cv#Gj@_-*]]@pnY{o#cv#Gj@_-*]]@pnY{a#cv#Gj@_-*]]@pnY{H#cv#Gj@_-*]]@pnY{1#cv#Gj@_-*]]@pnY{4#cv#Gj@_-*]]@pnY{c#cv#Gj@_-*]]@pnY{p#cv#Gj@_-*]]@pnY{I#cv#Gj@_-*]]@pnY{1#cv#Gj@_-*]]@pnY{6#cv#Gj@_-*]]@pnY{", string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("]&zJFy7_]sT", "]&zJFy7_]sT", "]&zJFy7_]sT");
      assertEquals("]&zJFy7_]sT", string0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("[qAKF>vXho8vevR", (String) null, "[qAKF>vXho8vevR");
      assertEquals("[qAKF>vXho8vevR", string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern((String) null, "'0[e+!wz4)[Rn5Kx5P~#HGa$v-P6f2", "'0[e+!wz4)[Rn5Kx5P~#HGa$v-P6f2");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("", "", (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("", (String) null, "q-.1X#w6W#dI.hAwaLV^fZo");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("", "", "n");
      assertEquals("n", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst((String) null, (String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = ToolBox.RegExTools.replaceFirst("", pattern0, (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = ToolBox.RegExTools.replaceFirst("comp5111.assignment.cut.ToolBox$ArrayTools", pattern0, "D!KnIj0_--Xhavp*AT!1,#w|_J");
      assertEquals("D!KnIj0_--Xhavp*AT!1,#w|_Jcomp5111.assignment.cut.ToolBox$ArrayTools", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("f$Ovfnvf9J]EcA(jWF4h'0g^`\">GGjOu3:JWCpw}", (Pattern) null, "comp5111.assogn~ment.cut.ToolBox$CharSequenceTools");
      assertEquals("f$Ovfnvf9J]EcA(jWF4h'0g^`\">GGjOu3:JWCpw}", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("j3DO-TUVe4}RKeel~M1Q<");
      String string0 = ToolBox.RegExTools.replaceFirst((String) null, pattern0, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("1CK&|W|]<0UjFH", "1CK&|W|]<0UjFH", (String) null);
      assertEquals("1CK&|W|]<0UjFH", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("", (String) null, "^19(xe9[T'[]h2#7v!D(NokcU*x#n]7R");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("U`YG5I}'v@^/7:#7S*kbM,5*/HJ@\"n>@55", " ", "|?s$8jD+9<F^]8Bdk-ah(_TP43$5R?yE[>UT;P{-8H?z^i");
      assertEquals("U`YG5I}'v@^/7:#7S*kbM,5*/HJ@\"n>@55", string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll((String) null, "", "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("nf`n8Ck");
      String string0 = ToolBox.RegExTools.replaceAll("nf`n8Ck", pattern0, (String) null);
      assertEquals("nf`n8Ck", string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("Q~Bb?|N~{T{^a", (Pattern) null, "");
      assertEquals("Q~Bb?|N~{T{^a", string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = ToolBox.RegExTools.replaceAll("", pattern0, ":o<hQA\"yLSI]q`j:'AGfl");
      assertEquals(":o<hQA\"yLSI]q`j:'AGfl", string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = ToolBox.RegExTools.replaceAll((String) null, pattern0, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3160);
      char[] charArray0 = new char[21];
      charArray0[2] = 'X';
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer1, 2033);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3112);
      char[] charArray0 = new char[3];
      charArray0[2] = 'j';
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer1, 2033);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3151);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "f$Ovfnvf9J]EcA(jWF4h'0g^`\">GGjOu3:JWCpw}", 1734);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.append((CharSequence) " ");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(" ", charBuffer0, 681);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      char[] charArray0 = new char[14];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.append((CharSequence) charBuffer0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " ");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("", charBuffer0, 3586);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "", (-1929));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, 101);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf((CharSequence) null, charBuffer0, (-289));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("i1_6~x;0i^4(y c!'^&KY.>O'KBw%;RRj1zZX:2_@j_shFl", "i1_6~x;0i^4(y c!'^&KY.>O'KBw%;RRj1zZX:2_@j_shFl", (-1239));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("AA`hN}6", (CharSequence) null, 120);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      char[] charArray0 = new char[14];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 65536, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, Integer.MAX_VALUE, Integer.MAX_VALUE);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3151);
      charBuffer0.put('\'');
      charBuffer0.clear();
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, '\'', 46);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      char[] charArray0 = new char[14];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.append((CharSequence) charBuffer0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 65536, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 2219, (-2360));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("i1_6~x;0i^4(y c!'^&KY.>O'KBw%;RRj1zZX:2_@j_shFl", (-1202), (-1239));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3138);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 3138, 2159);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3112);
      charBuffer0.put(0, 'C');
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 0, "comp5111.assogn~ment.cut.ToolBox$CharSequenceTools", 0, 19);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3151);
      CharBuffer charBuffer1 = charBuffer0.compact();
      charBuffer1.compact();
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 2650, "comp5111.assogn~ment.cut.ToolBox$CharSequenceTools", 2, 1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 0, charBuffer0, 101, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3138);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 88, charBuffer0, 1311, 486);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('\n');
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, '\r', "^KfmQE/g:PWVkE#d!Dn", 65, (-2651));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 110, charBuffer0, (-579), 88);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "q ");
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, (-1), "q ", 20, 1923);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("\r", false, 4352, charBuffer0, 0, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("\n", false, 21, ":o<hQA\"yLSI]q`j:'AGfl", 21, 21);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) charBuffer0, (CharSequence) charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "", (CharSequence) "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) null, (CharSequence) "K5A/C#Nq8.JR*^G}1sEW2<");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.indexOf("n", "n", 1118);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3151);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, charBuffer0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      char[] charArray0 = new char[14];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 65536, '\u0000');
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3138);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, (CharSequence) charBuffer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3151);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, Integer.MAX_VALUE, 1290);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(3151);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 3175, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      short[] shortArray0 = new short[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(shortArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      short[] shortArray0 = new short[5];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(shortArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      String string0 = ToolBox.StringTools.getCommonPrefix((String[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      String[] stringArray0 = new String[1];
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((long[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      long[] longArray0 = new long[4];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(longArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((int[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      int[] intArray0 = new int[4];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((float[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      float[] floatArray0 = new float[2];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(floatArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((double[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      double[] doubleArray0 = new double[7];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(doubleArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) " ", (char[]) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(byteArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((boolean[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[5];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(booleanArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_XLA:Q5tg2K");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _XLA:Q5tg2K
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("_GF_XLi2");
      assertEquals("XLi2", locale0.getVariant());
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_XL%");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _XL%
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("_XX");
      assertEquals("XX", locale0.getCountry());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_f_y");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _f_y
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_y");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _y
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_XoD'E9KUhLd[o*g>SY'Yn}p2Eu-]dQKS33$n Y");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _XoD'E9KUhLd[o*g>SY'Yn}p2Eu-]dQKS33$n Y
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale(" ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format:  
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("q#$w](k{3a&+1U#{X@>`pd);Y");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: q#$w](k{3a&+1U#{X@>`pd);Y
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("");
      assertEquals("", locale0.getLanguage());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale((String) null);
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("qo__\"C%");
      assertNotNull(locale0);
      assertEquals("\"C%", locale0.getVariant());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("de__");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: de__
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("ArL|*=`_lLP@lwDgg|IOJ6aer7~$1\"q]ZKJs_9(wSgvJK");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: ArL|*=`_lLP@lwDgg|IOJ6aer7~$1\"q]ZKJs_9(wSgvJK
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("comp5111.assignment.cut.ToolBox$CharTools");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: comp5111.assignment.cut.ToolBox$CharTools
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("fmo_CV");
      assertNotNull(locale0);
      assertEquals("CPV", locale0.getISO3Country());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("qq");
      assertNotNull(locale0);
      assertEquals("qq", locale0.getLanguage());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("Fj[@W~JU[Wf0qw}4:E9_317");
      assertEquals("fj[@w~ju[wf0qw}4:e9", locale0.getLanguage());
      assertNotNull(locale0);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("j[@Jk6JU;Wf0w}4:E;l_7");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: j[@Jk6JU;Wf0w}4:E;l_7
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("f_y");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: f_y
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("fmo_V");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: fmo_V
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("de_JR_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: de_JR_
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("de_c,Hu.*M2SV_x");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: de_c,Hu.*M2SV_x
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      ToolBox.ArrayTools toolBox_ArrayTools0 = new ToolBox.ArrayTools();
      int int0 = ToolBox.StringTools.indexOfAny("\r", toolBox_ArrayTools0.EMPTY_CHAR_ARRAY);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      ToolBox.CharTools toolBox_CharTools0 = new ToolBox.CharTools();
      assertEquals('\u0000', ToolBox.CharTools.NUL);
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      ToolBox.CharSequenceTools toolBox_CharSequenceTools0 = new ToolBox.CharSequenceTools();
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      ToolBox.LocaleTools toolBox_LocaleTools0 = new ToolBox.LocaleTools();
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ToolBox.RegExTools toolBox_RegExTools0 = new ToolBox.RegExTools();
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ToolBox.StringTools toolBox_StringTools0 = new ToolBox.StringTools();
      assertEquals((-1), ToolBox.StringTools.INDEX_NOT_FOUND);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ToolBox toolBox0 = new ToolBox();
  }
}
