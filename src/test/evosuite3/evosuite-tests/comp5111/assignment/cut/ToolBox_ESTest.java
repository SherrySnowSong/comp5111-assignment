/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 01 19:02:31 GMT 2021
 */

package comp5111.assignment.cut;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import comp5111.assignment.cut.ToolBox;
import java.nio.CharBuffer;
import java.util.Locale;
import java.util.function.Supplier;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

public class ToolBox_ESTest extends ToolBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("N5l");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("~5.l");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("9L");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("_F");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("y6f");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("gD");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("fd");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("X5E.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("g..");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("zE");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("@e");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("B0");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("g.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("S-tAm-iTGp98");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("9EYYyq/0rP|N>_6v1yru[<OhKz;ClOOvvg");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("m1.E2Ep$WK+H~w~y.A$4MC1)kfZpK1J;");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("T3e+^rgW6%1WVp ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("~5E.l");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("[..u<bD_\">c9+Uw=4Yl>q#PVnh\"");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("~5El");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable(")t");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("P02E&H]3KIclF!Z>$EZ5(EN0%n}B@m=");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("A05");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("P02&H]3KIclF!Z>$EZ5(EN0%n}B@m=");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("L0x+{;~:NaO)[,ju");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("80xB1");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("80x");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("L0XHF)1:NO#[u");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("L0xcc9u{)~:NaO)[Yu");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("\n");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("+.B6,ZwQSNAL@<!|24,# 9)<l,");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("-d >p<10=[Ltp|j-");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[2] = 'y';
      charArray0[6] = 'W';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.isMixedCase(charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("B0");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("comcom11.assignment.cut.toolbox$aratools");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("\n");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("zT*tg7P1FYc.HaJCi[jVqE");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllUpperCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllLowerCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[8];
      boolean boolean0 = ToolBox.StringTools.isNumeric(charSequenceArray0[1]);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "_|)4i.>0a";
      stringArray0[1] = "rqvqOc!#$L)>~R7@@2(iOH^U}o5Vk226\tay;=M^fl9pHN+";
      stringArray0[2] = "_|)4i.>0a|\"'cd$|}";
      stringArray0[3] = "k~ynW";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[8];
      charSequenceArray0[0] = (CharSequence) "";
      charSequenceArray0[1] = (CharSequence) "";
      charSequenceArray0[2] = (CharSequence) "";
      charSequenceArray0[3] = (CharSequence) "";
      charSequenceArray0[4] = (CharSequence) "";
      charSequenceArray0[5] = (CharSequence) "";
      charSequenceArray0[6] = (CharSequence) "";
      charSequenceArray0[7] = (CharSequence) "";
      int int0 = ToolBox.StringTools.indexOfDifference(charSequenceArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      CharSequence[] charSequenceArray0 = new CharSequence[8];
      charSequenceArray0[0] = (CharSequence) "";
      int int0 = ToolBox.StringTools.indexOfDifference(charSequenceArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("\n", 1);
      String[] stringArray0 = pattern0.split((CharSequence) "\n");
      int int0 = ToolBox.StringTools.indexOfDifference(stringArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "\r", (CharSequence) "\n");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "_|)4i.>0a_|)4i.>0a", (CharSequence) "");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "", (CharSequence) "");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[1] = 't';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      char[] charArray1 = new char[8];
      charArray1[7] = 't';
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, charArray1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      char[] charArray0 = new char[0];
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "rY8x?r/YV>Cd|", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      char[] charArray0 = new char[1];
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "\n", charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      char[] charArray0 = new char[1];
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.StringTools.indexOfAny(charBuffer0, charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(268);
      char[] charArray0 = new char[5];
      charArray0[1] = 'a';
      charArray0[2] = 'p';
      charArray0[4] = 'N';
      int int0 = ToolBox.StringTools.indexOfAny(charBuffer0, charArray0);
      assertEquals(267, int0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[2] = 'n';
      int int0 = ToolBox.StringTools.indexOfAny("comp5111.assignment.cut.ToolBox$ArrayTools", charArray0);
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      char[] charArray0 = new char[1];
      int int0 = ToolBox.StringTools.indexOfAny("\n", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      char[] charArray0 = new char[1];
      int int0 = ToolBox.StringTools.indexOfAny("", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      String string0 = ToolBox.StringTools.getIfEmpty("", (Supplier<String>) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Supplier<CharSequence> supplier0 = (Supplier<CharSequence>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      CharSequence charSequence0 = ToolBox.StringTools.getIfEmpty((CharSequence) "", supplier0);
      //  // Unstable assertion: assertEquals("", charSequence0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Supplier<String> supplier0 = (Supplier<String>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      String string0 = ToolBox.StringTools.getIfEmpty(" ", supplier0);
      assertEquals(" ", string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "$X[]<>1wz{K[7=S}BP,Nps";
      stringArray0[1] = "qo%~IJKj18/?<!_;8yMygj?p^Qq3SBI91Tv.5c*\"g";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("$X[]<>1wz{K[7=S}BP,Nps", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "comcom11.assignment.cut.toolbox$aratools";
      stringArray0[1] = "comcom11.assignment.cut.toolbox$aratools";
      stringArray0[2] = "comcom11.assignment.cut.toolbox$aratools";
      stringArray0[3] = "comcom11.assignment.cut.toolbox$aratools";
      stringArray0[4] = "comcom11.assignment.cut.toolbox$aratools";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("comcom11.assignment.cut.toolbox$aratools", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " ");
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) charBuffer0, (CharSequence) "\r");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " ");
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) " ", (CharSequence) charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) charBuffer0, (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) null, (CharSequence) "\n");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "", (CharSequence) "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "", (CharSequence) "/J@q\"D=b!}&OR");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.StringTools.containsNone(charBuffer0, charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      char[] charArray0 = new char[1];
      boolean boolean0 = ToolBox.StringTools.containsNone("Kld^jKBDn:PGy*utW0&;sw(CX7M@5p0.5*`3", charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsNone("\n", (char[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      char[] charArray0 = new char[1];
      boolean boolean0 = ToolBox.StringTools.containsNone((CharSequence) null, charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) null, (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[1] = 'A';
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "rlzWzk+AO64j-]jy%0Z`64-X{n*Kdt$^{QHDPL_M", charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      char[] charArray0 = new char[1];
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "", charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("'0tZf=QTj1To%~E6A;y|M8D5A.x Kao.#aJ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.contains((CharSequence) null, 431);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("P0jE&]3KIclF!Z>$EZ5(EN0%n}B@m=");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("l#[VzW!4J81+/k!-x XIVC^'wN)qJ4-4|DyB(L", (String) null, true);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("0_x0J%nA?~TLN%X=V.#&T-nJo(&E&HNX4:SrRnU", ",,Wwq<xaPzA//CIGcp*}Rz3W}t9Q&m}cE`Wx-Q7 ", false);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase((String) null, "\n", true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("^g$*0&6Gd6{v|cR1;pvG?AQ7/a.)j=|'Wmn;r_", (String) null, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("xPc{UiK0g", "xPc{UiK0g", false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase((String) null, "$Y_bTJt\"fVW#]]D<`+Dp](FaxOI;sn<2x^V%zn&mIT(", false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("d`,6Zbd'dB1QV[D8p", (String) null, true);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("", (String) null, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare((String) null, "ZL_n1'AT*,6$V\"Ak,IHb)ktCY(f+!sGFe&D2Uga%", true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare((String) null, "`0p*@\"g?!\"GsPHBvY1d;C1F=Y", false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("", "", false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray((CharSequence) null);
      assertEquals(0, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("", "Oet=\"?zHMu", (String) null);
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("pmG", (String) null, "");
      assertEquals("pmG", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("", "", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern((String) null, (String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("xPc{UiK0g", "xPc{UiK0g", (String) null);
      assertEquals("xPc{UiK0g", string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst(".7I<|JSN=EK_@&fA-NqEy(P@%/5V.]R ", (String) null, "/h10,9vLA.AK7.eJqVU9<e.X{cQs=Ns]a?ru1b7_Sg");
      assertEquals(".7I<|JSN=EK_@&fA-NqEy(P@%/5V.]R ", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("rlzWzk+AO64j-]jy%0Z`64-X{n*Kdt$^{QHDPL_M", "\n", "rlzWzk+AO64j-]jy%0Z`64-X{n*Kdt$^{QHDPL_M");
      assertEquals("rlzWzk+AO64j-]jy%0Z`64-X{n*Kdt$^{QHDPL_M", string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst((String) null, (String) null, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("\n", 1);
      String string0 = ToolBox.RegExTools.replaceFirst("4+Z\"", pattern0, "");
      assertEquals("4+Z\"", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("", (Pattern) null, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("\n", 1);
      String string0 = ToolBox.RegExTools.replaceFirst("", pattern0, (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Pattern pattern0 = Pattern.compile(" ");
      String string0 = ToolBox.RegExTools.replaceFirst((String) null, pattern0, " ");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("", "\n", (String) null);
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("", (String) null, "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("", "4+Z\"", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll((String) null, "\r", (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = ToolBox.RegExTools.replaceAll("`H'g:k>DQ7X5My@O3A@=d(y9|h]G$#!RnH98,w", pattern0, (String) null);
      assertEquals("`H'g:k>DQ7X5My@O3A@=d(y9|h]G$#!RnH98,w", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      // Undeclared exception!
      try { 
        ToolBox.RegExTools.replaceAll("\n", pattern0, "EZ''$Uo.b+ |m$nG%y4fx2+U47hZqL 1DDpo");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal group reference
         //
         verifyException("java.util.regex.Matcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("[(8#EZpDW[oD,s5g?g]jb)(`jO)g}P+k527F", (Pattern) null, "g.");
      assertEquals("[(8#EZpDW[oD,s5g?g]jb)(`jO)g}P+k527F", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("", 32);
      String string0 = ToolBox.RegExTools.replaceAll((String) null, pattern0, "~|4+6`;");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[5] = '\u0012';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.allocate('\u0011');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer1, charBuffer0, '\u0012');
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[1] = '\u001F';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.allocate('S');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer1, charBuffer0, '\u001F');
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(394);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "EeZepd_.yO75_", 394);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      CharBuffer charBuffer1 = CharBuffer.allocate('S');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer1, charBuffer0, '\u001F');
      assertEquals(31, int0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\r");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("\r", charBuffer0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('\u001F');
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, '*');
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(10);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "", 10);
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "EeZepd_.yO75_", 394);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "", (-4306));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf((CharSequence) null, "qo%~IJKj18/?<!_;8yMygj?p^Qq3SBI91Tv.5c*\"g", (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("", "", 1767);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(" ", (CharSequence) null, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 1114111, 1114111);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 1114153, 1114153);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 's';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 's', 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(139);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 65560, 16);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "/3@DBT.|rhGX^,g:Gd/3@DBT.|rhGX^,g:Gd//3@DBT.|rhGX^,g:GdX/3@DBT.|rhGX^,g:Gd/3@DBT.|rhGX^,g:Gdo/3@DBT.|rhGX^,g:GdG/3@DBT.|rhGX^,g:GdA/3@DBT.|rhGX^,g:GdN/3@DBT.|rhGX^,g:Gd;/3@DBT.|rhGX^,g:Gd7/3@DBT.|rhGX^,g:GdR/3@DBT.|rhGX^,g:Gdt/3@DBT.|rhGX^,g:Gdh/3@DBT.|rhGX^,g:Gd+/3@DBT.|rhGX^,g:Gd{/3@DBT.|rhGX^,g:Gd9/3@DBT.|rhGX^,g:Gd;/3@DBT.|rhGX^,g:Gd}/3@DBT.|rhGX^,g:Gds/3@DBT.|rhGX^,g:Gd/3@DBT.|rhGX^,g:GdD/3@DBT.|rhGX^,g:Gd^/3@DBT.|rhGX^,g:GdU/3@DBT.|rhGX^,g:Gdk/3@DBT.|rhGX^,g:Gdx/3@DBT.|rhGX^,g:Gd7/3@DBT.|rhGX^,g:Gd'/3@DBT.|rhGX^,g:GdC/3@DBT.|rhGX^,g:Gd~/3@DBT.|rhGX^,g:Gdm/3@DBT.|rhGX^,g:Gd5/3@DBT.|rhGX^,g:Gd%/3@DBT.|rhGX^,g:Gdl/3@DBT.|rhGX^,g:Gd5/3@DBT.|rhGX^,g:Gd_/3@DBT.|rhGX^,g:Gd%/3@DBT.|rhGX^,g:Gdd/3@DBT.|rhGX^,g:Gd");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, (-1), (-8));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("", 0, 24);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(9);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 9, 3705);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('\u001F');
      charBuffer0.put('H');
      charBuffer0.clear();
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 1, charBuffer0, 0, 3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[1] = '\u001F';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 1, charBuffer0, 0, 3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('\u001F');
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 1, charBuffer0, '*', 3);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 1, charBuffer0, 0, 3);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "pmG");
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 825, "pmG", 825, (-682));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 0, charBuffer0, (-1), 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(9);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, 9, charBuffer0, 9, 9);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) " ");
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, (-1), charBuffer0, 1, 2789);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.CharSequenceTools.regionMatches(".7I<|JSN=EK_@&fA-NqEy(P@%/5V.]R ", false, 0, (CharSequence) null, 230, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("comp5111.assignment.cut.ToolBox$CharSequenceTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("", false, (-1), "", 0, 69);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      char[] charArray1 = ToolBox.CharSequenceTools.toCharArray(charBuffer0);
      assertEquals(6, charArray1.length);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "`H'g:k>DQ7X5My@O3A@=d(y9|h]G$#!RnH98,w", (CharSequence) "");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray("*OzE>`5t9?D\"Cy}X%Bz([NA(F,27IVh6jk");
      assertEquals(34, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.indexOf(" ", "4+Z\"", 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, charBuffer0, 1155);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 1114153, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 95, 'o');
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      char[] charArray0 = new char[21];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 1114111, (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "_KS", (CharSequence) "_KS");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "_KS");
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, (CharSequence) charBuffer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      short[] shortArray0 = new short[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(shortArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      short[] shortArray0 = new short[9];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(shortArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      String string0 = ToolBox.StringTools.getCommonPrefix((String[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      String[] stringArray0 = new String[4];
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      long[] longArray0 = new long[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(longArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      long[] longArray0 = new long[9];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(longArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((int[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      int[] intArray0 = new int[9];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((float[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      float[] floatArray0 = new float[4];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(floatArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((double[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      double[] doubleArray0 = new double[10];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(doubleArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAny("\n", (char[]) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      char[] charArray0 = new char[5];
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "_KS", charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(byteArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((boolean[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[6];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(booleanArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_YD`Rg<|3z6+bzH\"iWsQ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _YD`Rg<|3z6+bzH\"iWsQ
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_KS6");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _KS6
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_N hC_`,'|~k}@99?'+oJOTS2<~~jrd");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _N hC_`,'|~k}@99?'+oJOTS2<~~jrd
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_|)4i.>0a");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _|)4i.>0a
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_F");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _F
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("_KS");
      assertEquals("KS", locale0.getCountry());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("'");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: '
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("XHJi 7{#6c`hqfLiJo\"Txj4,%\"85j6JD:J&.kb0oJ4&k@");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: XHJi 7{#6c`hqfLiJo\"Txj4,%\"85j6JD:J&.kb0oJ4&k@
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("");
      assertEquals("", locale0.getISO3Country());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale((String) null);
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("un_QL_E");
      assertEquals("un_QL_E", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("un__");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: un__
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("gdy$g,[DjkX?I{'-_a.u_7~q./`iR*5>+Wcu17R5jV5c I@");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: gdy$g,[DjkX?I{'-_a.u_7~q./`iR*5>+Wcu17R5jV5c I@
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("D9yb9fO^qmih6J*D;rts@k!q_058");
      assertEquals("058", locale0.getCountry());
      assertNotNull(locale0);
      assertEquals("d9yb9fo^qmih6j*d;rts@k!q_058", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("$$K:,z/YI2:hU.B-7(Aw6=?(v}]H]:Ii}(?]>qZY_6");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: $$K:,z/YI2:hU.B-7(Aw6=?(v}]H]:Ii}(?]>qZY_6
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("rvk");
      assertNotNull(locale0);
      assertEquals("rvk", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("rvuk");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: rvuk
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("un_E");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: un_E
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("un_JE");
      assertNotNull(locale0);
      assertEquals("un_JE", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("lr_jSx,)M4I>*_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: lr_jSx,)M4I>*_
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      ToolBox.ArrayTools toolBox_ArrayTools0 = new ToolBox.ArrayTools();
      assertEquals((-1), ToolBox.ArrayTools.INDEX_NOT_FOUND);
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ToolBox.CharTools toolBox_CharTools0 = new ToolBox.CharTools();
      assertEquals('\r', ToolBox.CharTools.CR);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ToolBox.CharSequenceTools toolBox_CharSequenceTools0 = new ToolBox.CharSequenceTools();
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ToolBox.LocaleTools toolBox_LocaleTools0 = new ToolBox.LocaleTools();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ToolBox.RegExTools toolBox_RegExTools0 = new ToolBox.RegExTools();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ToolBox.StringTools toolBox_StringTools0 = new ToolBox.StringTools();
      assertEquals((-1), ToolBox.StringTools.INDEX_NOT_FOUND);
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ToolBox toolBox0 = new ToolBox();
  }
}
