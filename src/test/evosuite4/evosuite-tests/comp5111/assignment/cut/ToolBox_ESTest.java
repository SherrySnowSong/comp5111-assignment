/*
 * This file was automatically generated by EvoSuite
 * Thu Apr 01 16:27:22 GMT 2021
 */

package comp5111.assignment.cut;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import comp5111.assignment.cut.ToolBox;
import java.nio.CharBuffer;
import java.util.Locale;
import java.util.function.Supplier;
import java.util.regex.Pattern;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

public class ToolBox_ESTest extends ToolBox_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("B.3l");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("B3e2l");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("B3l");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("Bl");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("`F");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("qf");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("JD");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("d");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("j8e:");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("B.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("j8.e.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("hE");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("g5e");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("h8");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("j8e-.");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("N+lvT1w-@d{IN7@$M$tQf,+Y=3QGm#}Lb'ut");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("yeVO^Ez%[L]G)fOu};2[2{P/AR!tb");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("08EEt!W!f~J$/uupQg/nR${?NQZ9*'/R, 8z*&^CGB2uC%");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("|61E.2c$C/epcG)Ca$eb].z\"4>U");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("o..>3zFph{MnY#}ZhDEu+))x{");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("J.?D{@,Wkx");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("8L");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("z00$OqmoCj{L");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("h0>A;kuJQXs ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("z0xA_<0$Oq}m^oCj/{LzwRJ2A");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("z0x0$Oqm^oCj/{LRJ2A");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("m0xe");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("z0x");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("b0XfghB:>x$SXRE;=Qp)");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("z00");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("c");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("+n7K2Y7Y$9:\"4{aG+>D9E|eR]d&+Z \"pr&40Pk");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("-q)X[^i4`S!n6");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("CDO");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("s]fx");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("Invalid locale format: ");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("CDu");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("\n");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isMixedCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllUpperCase("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isAllLowerCase((CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isNumeric("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "%G8ZaIcf.Atwf}4$X4&YJ<FpKd[pG";
      stringArray0[1] = ">L.3#dJ$V8(!sxP=";
      stringArray0[2] = "comp5111.assignment.cut.ToolBox$ArrayTools";
      stringArray0[3] = ",4n6xR#Hmm<kLy;?&?)@JH@[-$JylY1LgKz~";
      stringArray0[4] = "MsQxWy<K\"yQ(nm':L:7ocQJ-sFIYR/\"aiEP\".6bnZPRY";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfDifference((CharSequence[]) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "08EEt!W!f~J$/uupQg/nR${?NQZ9*'/R, 8z*&^CGB2uC%", (CharSequence) "08EEt!W!f~J$/uupQg/nR${?NQZ9*'/R, 8z*&^CGB2uC%");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "#", (CharSequence) "\n");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "c", (CharSequence) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) null, (CharSequence) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(1671);
      char[] charArray0 = new char[3];
      charArray0[0] = 'm';
      charBuffer0.put(charArray0);
      char[] charArray1 = new char[2];
      charBuffer0.flip();
      charArray1[1] = 'm';
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer0, charArray1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(971);
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      charBuffer0.put(charBuffer1);
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) charBuffer1, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'U';
      int int0 = ToolBox.StringTools.indexOfAny("B^<#Mgr;_U ooM::25XE5/u97 i.A@.<B!08B^<#Mgr;_U ooM::25XE5/u97 i.A@.<B!08", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[7] = 'U';
      int int0 = ToolBox.StringTools.indexOfAny("B^<#Mgr;_U ooM::25XE5/u97 i.A@.<B!08B^<#Mgr;_U ooM::25XE5/u97 i.A@.<B!08", charArray0);
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      char[] charArray0 = new char[10];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.append('\u076D');
      charBuffer0.compact();
      int int0 = ToolBox.StringTools.indexOfAny(charBuffer0, charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      char[] charArray0 = new char[10];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.StringTools.indexOfAny(charBuffer0, charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      char[] charArray0 = new char[0];
      int int0 = ToolBox.StringTools.indexOfAny("c", charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray("");
      int int0 = ToolBox.StringTools.indexOfAny((CharSequence) null, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      String string0 = ToolBox.StringTools.getIfEmpty("", (Supplier<String>) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Supplier<CharSequence> supplier0 = (Supplier<CharSequence>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      doReturn((Object) null).when(supplier0).get();
      CharSequence charSequence0 = ToolBox.StringTools.getIfEmpty((CharSequence) null, supplier0);
      assertNull(charSequence0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Supplier<String> supplier0 = (Supplier<String>) mock(Supplier.class, new ViolatedAssumptionAnswer());
      String string0 = ToolBox.StringTools.getIfEmpty("yeVO^Ez%[L]G)fOu};2[2{P/AR!tb", supplier0);
      assertEquals("yeVO^Ez%[L]G)fOu};2[2{P/AR!tb", string0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Nk!{z+)&XVmBKq9XFtrCf(}dM}5*#65e|~^Nz>0d`AcPKG";
      stringArray0[1] = "HD7Tvn[(eXx#8F?l'=a{X,";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("Nk!{z+)&XVmBKq9XFtrCf(", string0);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "\n";
      stringArray0[1] = "\n";
      stringArray0[2] = "\n";
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("\n", string0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      String[] stringArray0 = new String[10];
      String string0 = ToolBox.StringTools.getCommonPrefix(stringArray0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[1] = 'X';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
      CharBuffer charBuffer1 = CharBuffer.allocate(1);
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) charBuffer1, (CharSequence) charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\n");
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "\n", (CharSequence) charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
      CharBuffer charBuffer1 = CharBuffer.allocate(1);
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) charBuffer1, (CharSequence) charBuffer0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "", (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) null, (CharSequence) "IA*x8HoHZ_rdJ)<F0GeNS.3TF}e ('0}dGb8Vf-:ZR*!%x-");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "", (CharSequence) "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.equals((CharSequence) "W^eS#Rld ~-%gd>a#u;/bqqB", (CharSequence) "\u0000B|`<^0*k*BRo0PQCDJ[E774<o]gDzurPv]C");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'e';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
      boolean boolean0 = ToolBox.StringTools.containsNone(charBuffer0, charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsNone(">L.3#dJ$V8(!sxP=", (char[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      char[] charArray0 = new char[0];
      boolean boolean0 = ToolBox.StringTools.containsNone("c", charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      char[] charArray0 = new char[0];
      boolean boolean0 = ToolBox.StringTools.containsNone((CharSequence) null, charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "_", (CharSequence) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      char[] charArray0 = new char[9];
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "8L", charArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) "\n", (char[]) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.contains("", 19);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.isCreatable("W0OaV:63n'1<Q%C#8Nzq.xgW^R?]]&q'Lt2d1");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("$Rm#ybht`q80v%ERS@+QDti|?-9r|;1|Mc", (String) null, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("C+?*)i]js@!lz,u=lLeHgEJ]1192F``f&E&", (String) null, true);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase((String) null, "CDu", true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase((String) null, "i#PF;lx6Y,Wu;MI?(4sW$zFi}iWBGS2K&Pj$r", false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("\r", "\r", false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      int int0 = ToolBox.StringTools.compareIgnoreCase("1CT#h<4ojJw/X9FrOQ.vVU)\"6~BvU-s<", "Invalid locale format: ", false);
      assertEquals((-56), int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("", (String) null, true);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("", (String) null, false);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare((String) null, "2z\"", false);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare((String) null, "o8TF1&s#odMI|5xW\"%J!*<oH(UTZ(kdV`@xfR%]", true);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("yeVO^Ez%[L]G)fOu};2[2{P/AR!tb", "yeVO^Ez%[L]G)fOu};2[2{P/AR!tb", false);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      int int0 = ToolBox.StringTools.compare("l:jj=9!o<1$L$UfaFvorzlUq", "Ut.RiR)Q_BnP1:AMz3%?", true);
      assertEquals(23, int0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      char[] charArray0 = ToolBox.CharSequenceTools.toCharArray((CharSequence) null);
      assertArrayEquals(new char[] {}, charArray0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("", "}Q >)3%", (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("", "s]fx", "s]fx");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern("", (String) null, "comp5111.assignment.cut.ToolBox$CharSequenceTools");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replacePattern((String) null, (String) null, "");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("$`m= z[|F jsIDG5sM1lI/!", "!&", (String) null);
      assertEquals("$`m= z[|F jsIDG5sM1lI/!", string0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("", (String) null, "l:jj=9!o<1$L$UfaFvorzlUq");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("k].Jeb&'<^'", "k].Jeb&'<^'", "");
      assertEquals("k].Jeb&'<^'", string0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst((String) null, (String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = ToolBox.RegExTools.replaceFirst("", pattern0, (String) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceFirst("l:jj=9!o<1$L$UfaFvorzlUq", (Pattern) null, "");
      assertEquals("l:jj=9!o<1$L$UfaFvorzlUq", string0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("B^<#Mgr;_U ooM::25XE5/u97 i.A@.<B!08", (-30));
      String string0 = ToolBox.RegExTools.replaceFirst("B^<#Mgr;_U ooM::25XE5/u97 i.A@.<B!08", pattern0, "B^<#Mgr;_U ooM::25XE5/u97 i.A@.<B!08");
      assertEquals("B^<#Mgr;_U ooM::25XE5/u97 i.A@.<B!08", string0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = ToolBox.RegExTools.replaceFirst((String) null, pattern0, " ");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("[o?s~`Yw)V-,}~Ew{s)", "", (String) null);
      assertEquals("[o?s~`Yw)V-,}~Ew{s)", string0);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("yeVO^Ez%[L]G)fOu};2[2{P/AR!tb", (String) null, "yeVO^Ez%[L]G)fOu};2[2{P/AR!tb");
      assertEquals("yeVO^Ez%[L]G)fOu};2[2{P/AR!tb", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("ftx,C@e`", "ftx,C@e`", "ftx,C@e`");
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll((String) null, "\n", "\n");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("");
      String string0 = ToolBox.RegExTools.replaceAll(")*R} |6[Kg(uC~7\"sLH6&_bW]Bk~0m2*,!Do;9AP", pattern0, (String) null);
      assertEquals(")*R} |6[Kg(uC~7\"sLH6&_bW]Bk~0m2*,!Do;9AP", string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      String string0 = ToolBox.RegExTools.replaceAll("", (Pattern) null, "\n");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("\u0000B|`<^0*k*BRo0PQCDJ[E774<o]gDzurPv]C");
      String string0 = ToolBox.RegExTools.replaceAll("\u0000B|`<^0*k*BRo0PQCDJ[E774<o]gDzurPv]C", pattern0, "\u0000B|`<^0*k*BRo0PQCDJ[E774<o]gDzurPv]C");
      assertEquals("\u0000B|`<^0*k*BRo0PQCDJ[E774<o]gDzurPv]C|`<^0*k*BRo0PQCDJ[E774<o]gDzurPv]C", string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Pattern pattern0 = Pattern.compile("+m]|%0'moai4v$`c$\"umB~zL(IFn{K~dQ", 1818);
      String string0 = ToolBox.RegExTools.replaceAll((String) null, pattern0, "+m]|%0'moai4v$`c$\"umB~zL(IFn{K~dQ");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[7] = '@';
      CharBuffer charBuffer0 = CharBuffer.allocate('@');
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer1, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[1] = '`';
      CharBuffer charBuffer0 = CharBuffer.allocate(971);
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer1, 369);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "iB*rF~|+hCw=9>*[?4nX{4GE5Dj7R!&Z[In");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "\r", 1630);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.allocate(971);
      CharBuffer charBuffer1 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer1, 369);
      assertEquals(369, int0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      char[] charArray0 = new char[15];
      CharSequence[] charSequenceArray0 = new CharSequence[9];
      charSequenceArray0[0] = (CharSequence) "yeVO^Ez%[L]G)fOu};2[2{P/AR!tb";
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charSequenceArray0[5] = (CharSequence) charBuffer0;
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charSequenceArray0[0], charSequenceArray0[5], 1285);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(971);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, 971);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      charBuffer0.flip();
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, charBuffer0, 4630);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, "\r", 1630);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "comp5111.assignment.cut.ToolBox$ArrayTools");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, ">L.3#dJ$V8(!sxP=", (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf((CharSequence) null, "m!6H", (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("c", "W-gkXi1*0~B19SK*_P", 60);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf((CharSequence) null, (CharSequence) null, (-652));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 1114111, 936);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, 1);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 2147483645, 1107);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[1] = '`';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, '`', 971);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      char[] charArray0 = new char[10];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 65559, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\n", 0, 0);
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 2412, (-1128));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\r");
      int int0 = ToolBox.CharSequenceTools.lastIndexOf(charBuffer0, 1532, 1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.lastIndexOf("c", (-1), (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate('W');
      CharBuffer charBuffer1 = charBuffer0.duplicate();
      charBuffer1.put('A');
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, true, '\u0000', "asou`;]q 0gj-d&o7*n+4", '\u0000', 15);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(971);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 46, "B^<#Mgr;_U ooM::25XE5/u97 i.A@.<B!08B^<#Mgr;_U ooM::25XE5/u97 i.A@.<B!08", 9, 60);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(971);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 46, charBuffer0, 9, 'f');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 1856, charBuffer0, 128, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("1CT#h<4ojJw/X9FrOQ.vVU)\"6~BvU-s<", true, 140, charBuffer0, 278, (-1214));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\r");
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, (-1), "k].Jeb&'<^'", 530, 530);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("1CT#h<4ojJw/X9FrOQ.vVU)\"6~BvU-s<", true, 140, charBuffer0, (-1), (-1214));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches("vd_KF", true, (-1), "vd_KF", (-1), (-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      boolean boolean0 = ToolBox.CharSequenceTools.regionMatches(charBuffer0, false, 0, charBuffer0, 118, 0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      char[] charArray1 = ToolBox.CharSequenceTools.toCharArray(charBuffer0);
      assertEquals(3, charArray1.length);
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "");
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) charBuffer0, (CharSequence) charBuffer0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      boolean boolean0 = ToolBox.StringTools.containsAny((CharSequence) " ", (CharSequence) " ");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      int int0 = ToolBox.CharSequenceTools.indexOf("d_904", "d_904", 61);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      char[] charArray0 = new char[10];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, "ftx,C@e`", 65559);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 1114128, '!');
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      char[] charArray0 = new char[10];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, 65559, 0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\n");
      int int0 = ToolBox.CharSequenceTools.indexOf(charBuffer0, (-1), (-1));
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "\n");
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "\n", (CharSequence) charBuffer0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((short[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      short[] shortArray0 = new short[1];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(shortArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      String string0 = ToolBox.StringTools.getCommonPrefix((String[]) null);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      long[] longArray0 = new long[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(longArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      long[] longArray0 = new long[2];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(longArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      int[] intArray0 = new int[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(intArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      int[] intArray0 = new int[7];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(intArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      float[] floatArray0 = new float[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(floatArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      float[] floatArray0 = new float[9];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(floatArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((double[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      double[] doubleArray0 = new double[3];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(doubleArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "d_904", (char[]) null);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      char[] charArray0 = new char[9];
      int int0 = ToolBox.StringTools.indexOfAnyBut((CharSequence) "d_904", charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(byteArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      boolean boolean0 = ToolBox.ArrayTools.isEmpty((boolean[]) null);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      boolean[] booleanArray0 = new boolean[1];
      boolean boolean0 = ToolBox.ArrayTools.isEmpty(booleanArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("_BI_X29\"8");
      assertEquals("_BI_X29\"8", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_BI$4");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _BI$4
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_BI$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _BI$
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_B$4");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _B$4
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_2 G8oX[fC8~^2{");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _2 G8oX[fC8~^2{
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("_BI");
      assertEquals("BDI", locale0.getISO3Country());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("_B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: _B
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("\r");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: \r
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("?!7[#_**OW~<(C8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: ?!7[#_**OW~<(C8
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("");
      assertEquals("", locale0.getCountry());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale((String) null);
      assertNull(locale0);
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("vd_LX_K");
      assertNotNull(locale0);
      assertEquals("K", locale0.getVariant());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("vd__");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: vd__
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("RW_f3x>a:sx-p_:ccn]n$AJEknH+o f[xzQ>c54Bqd//");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: RW_f3x>a:sx-p_:ccn]n$AJEknH+o f[xzQ>c54Bqd//
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("d_904");
      assertNotNull(locale0);
      assertEquals("904", locale0.getCountry());
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("vd_4");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: vd_4
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("qpqrc");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: qpqrc
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("prc");
      assertNotNull(locale0);
      assertEquals("prc", locale0.getISO3Language());
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      Locale locale0 = ToolBox.LocaleTools.toLocale("vd_KF");
      assertNotNull(locale0);
      assertEquals("vd_KF", locale0.toString());
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("vd_F");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: vd_F
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      // Undeclared exception!
      try { 
        ToolBox.LocaleTools.toLocale("ad_GM$z_K");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid locale format: ad_GM$z_K
         //
         verifyException("comp5111.assignment.cut.ToolBox$LocaleTools", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      ToolBox.ArrayTools toolBox_ArrayTools0 = new ToolBox.ArrayTools();
      assertEquals((-1), ToolBox.ArrayTools.INDEX_NOT_FOUND);
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      ToolBox.CharTools toolBox_CharTools0 = new ToolBox.CharTools();
      assertEquals('\u0000', ToolBox.CharTools.NUL);
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      ToolBox.CharSequenceTools toolBox_CharSequenceTools0 = new ToolBox.CharSequenceTools();
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      ToolBox.LocaleTools toolBox_LocaleTools0 = new ToolBox.LocaleTools();
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      ToolBox.RegExTools toolBox_RegExTools0 = new ToolBox.RegExTools();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      ToolBox.StringTools toolBox_StringTools0 = new ToolBox.StringTools();
      assertEquals((-1), ToolBox.StringTools.INDEX_NOT_FOUND);
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      ToolBox toolBox0 = new ToolBox();
  }
}
